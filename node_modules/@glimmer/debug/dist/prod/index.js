import{LOCAL_LOGGER as e,enumerate as n,decodeHandle as t,decodeImmediate as a}from"@glimmer/util";import{Op as o,MachineOp as r,$v0 as c,$t1 as s,$t0 as p,$s1 as m,$s0 as l,$sp as i,$fp as u,$ra as h,$pc as d}from"@glimmer/vm";const f=!("undefined"==typeof window||!window.location||!/[&?]enable_local_should_log/u.test(window.location.search));function k(e){let n=new Array(e);for(let t=0;t<e;t++)n[t]=null;return n}function y(e,n){return(n?b[e]:g[e])||null}const g=k(o.Size),b=k(r.Size);function C(n,t,a){if(f){e.group(`%c${t}:${a}`,"color: #999");let o=n.program.heap,r=n.program.createOp(o),c=0;for(let o=t;o<a;o+=c){r.offset=o;let[t,a]=S(n.program.constants,r,r.isMachine);e.log(`${o}. ${v(t,a)}`),c=r.size}r.offset=-c,e.groupEnd()}}function v(e,n){if(f){let t=e;if(n){let e=Object.keys(n).map((e=>` ${e}=${function(e){if(f){if("function"==typeof e)return"<function>";let n;try{n=JSON.stringify(e)}catch(e){return"<object>"}if(void 0===n)return"undefined";let t=JSON.parse(n);return"object"==typeof t&&null!==t&&void 0!==t.GlimmerDebug?t.GlimmerDebug:n}}(n[e])}`)).join("");t+=e}return`(${t})`}}function S(e,t,a){if(f){let o=y(t.type,a);if(!o)throw new Error(`Missing Opcode Metadata for ${t}`);let r=Object.create(null);for(const[a,c]of n(o.ops)){let n=w(t,a);switch(c.type){case"u32":case"i32":case"owner":r[c.name]=n;break;case"handle":case"str":case"option-str":case"array":case"unknown":r[c.name]=e.getValue(n);break;case"str-array":r[c.name]=e.getArray(n);break;case"bool":r[c.name]=!!n;break;case"primitive":r[c.name]=x(n,e);break;case"register":r[c.name]=A(n);break;case"symbol-table":case"scope":r[c.name]=`<scope ${n}>`;break;default:throw new Error(`Unexpected operand type ${c.type} for debug output`)}}return[o.name,r]}}function w(e,n){switch(n){case 0:return e.op1;case 1:return e.op2;case 2:return e.op3;default:throw new Error("Unexpected operand index (must be 0-2)")}}function A(e){switch(e){case d:return"pc";case h:return"ra";case u:return"fp";case i:return"sp";case l:return"s0";case m:return"s1";case p:return"t0";case s:return"t1";case c:return"v0"}}function x(e,n){return e>=0?n.getValue(t(e)):a(e)}b[r.PushFrame]={name:"PushFrame",mnemonic:"pushf",before:null,stackChange:2,ops:[],operands:0,check:!0},b[r.PopFrame]={name:"PopFrame",mnemonic:"popf",before:null,stackChange:-2,ops:[],operands:0,check:!1},b[r.InvokeVirtual]={name:"InvokeVirtual",mnemonic:"vcall",before:null,stackChange:-1,ops:[],operands:0,check:!0},b[r.InvokeStatic]={name:"InvokeStatic",mnemonic:"scall",before:null,stackChange:0,ops:[{name:"offset",type:"u32"}],operands:1,check:!0},b[r.Jump]={name:"Jump",mnemonic:"goto",before:null,stackChange:0,ops:[{name:"to",type:"u32"}],operands:1,check:!0},b[r.Return]={name:"Return",mnemonic:"ret",before:null,stackChange:0,ops:[],operands:0,check:!1},b[r.ReturnTo]={name:"ReturnTo",mnemonic:"setra",before:null,stackChange:0,ops:[{name:"offset",type:"i32"}],operands:1,check:!0},g[o.Helper]={name:"Helper",mnemonic:"ncall",before:null,stackChange:null,ops:[{name:"helper",type:"handle"}],operands:1,check:!0},g[o.DynamicHelper]={name:"DynamicHelper",mnemonic:"dynamiccall",before:null,stackChange:null,ops:[],operands:0,check:!0},g[o.SetNamedVariables]={name:"SetNamedVariables",mnemonic:"vsargs",before:null,stackChange:0,ops:[{name:"register",type:"u32"}],operands:1,check:!0},g[o.SetBlocks]={name:"SetBlocks",mnemonic:"vbblocks",before:null,stackChange:0,ops:[{name:"register",type:"u32"}],operands:1,check:!0},g[o.SetVariable]={name:"SetVariable",mnemonic:"sbvar",before:null,stackChange:-1,ops:[{name:"symbol",type:"u32"}],operands:1,check:!0},g[o.SetBlock]={name:"SetBlock",mnemonic:"sblock",before:null,stackChange:-3,ops:[{name:"symbol",type:"u32"}],operands:1,check:!0},g[o.GetVariable]={name:"GetVariable",mnemonic:"symload",before:null,stackChange:1,ops:[{name:"symbol",type:"u32"}],operands:1,check:!0},g[o.GetProperty]={name:"GetProperty",mnemonic:"getprop",before:null,stackChange:0,ops:[{name:"property",type:"str"}],operands:1,check:!0},g[o.GetBlock]={name:"GetBlock",mnemonic:"blockload",before:null,stackChange:1,ops:[{name:"block",type:"u32"}],operands:1,check:!0},g[o.SpreadBlock]={name:"SpreadBlock",mnemonic:"blockspread",before:null,stackChange:2,ops:[],operands:0,check:!0},g[o.HasBlock]={name:"HasBlock",mnemonic:"hasblockload",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.HasBlockParams]={name:"HasBlockParams",mnemonic:"hasparamsload",before:null,stackChange:-2,ops:[],operands:0,check:!0},g[o.Concat]={name:"Concat",mnemonic:"concat",before:null,stackChange:null,ops:[{name:"count",type:"u32"}],operands:1,check:!0},g[o.IfInline]={name:"IfInline",mnemonic:"ifinline",before:null,stackChange:-2,ops:[{name:"count",type:"u32"}],operands:1,check:!0},g[o.Not]={name:"Not",mnemonic:"not",before:null,stackChange:0,ops:[{name:"count",type:"u32"}],operands:1,check:!0},g[o.Constant]={name:"Constant",mnemonic:"rconstload",before:null,stackChange:1,ops:[{name:"constant",type:"unknown"}],operands:1,check:!0},g[o.ConstantReference]={name:"ConstantReference",mnemonic:"rconstrefload",before:null,stackChange:1,ops:[{name:"constant",type:"unknown"}],operands:1,check:!0},g[o.Primitive]={name:"Primitive",mnemonic:"pconstload",before:null,stackChange:1,ops:[{name:"constant",type:"primitive"}],operands:1,check:!0},g[o.PrimitiveReference]={name:"PrimitiveReference",mnemonic:"ptoref",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.ReifyU32]={name:"ReifyU32",mnemonic:"reifyload",before:null,stackChange:1,ops:[],operands:0,check:!0},g[o.Dup]={name:"Dup",mnemonic:"dup",before:null,stackChange:1,ops:[{name:"register",type:"u32"},{name:"offset",type:"u32"}],operands:2,check:!0},g[o.Pop]={name:"Pop",mnemonic:"pop",before:null,stackChange:0,ops:[{name:"count",type:"u32"}],operands:1,check:!1},g[o.Load]={name:"Load",mnemonic:"put",before:null,stackChange:-1,ops:[{name:"register",type:"u32"}],operands:1,check:!0},g[o.Fetch]={name:"Fetch",mnemonic:"regload",before:null,stackChange:1,ops:[{name:"register",type:"u32"}],operands:1,check:!0},g[o.RootScope]={name:"RootScope",mnemonic:"rscopepush",before:null,stackChange:0,ops:[{name:"symbols",type:"u32"}],operands:1,check:!0},g[o.VirtualRootScope]={name:"VirtualRootScope",mnemonic:"vrscopepush",before:null,stackChange:0,ops:[{name:"register",type:"u32"}],operands:1,check:!0},g[o.ChildScope]={name:"ChildScope",mnemonic:"cscopepush",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.PopScope]={name:"PopScope",mnemonic:"scopepop",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.Text]={name:"Text",mnemonic:"apnd_text",before:null,stackChange:0,ops:[{name:"contents",type:"str"}],operands:1,check:!0},g[o.Comment]={name:"Comment",mnemonic:"apnd_comment",before:null,stackChange:0,ops:[{name:"contents",type:"str"}],operands:1,check:!0},g[o.AppendHTML]={name:"AppendHTML",mnemonic:"apnd_dynhtml",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.AppendSafeHTML]={name:"AppendSafeHTML",mnemonic:"apnd_dynshtml",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.AppendDocumentFragment]={name:"AppendDocumentFragment",mnemonic:"apnd_dynfrag",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.AppendNode]={name:"AppendNode",mnemonic:"apnd_dynnode",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.AppendText]={name:"AppendText",mnemonic:"apnd_dyntext",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.OpenElement]={name:"OpenElement",mnemonic:"apnd_tag",before:null,stackChange:0,ops:[{name:"tag",type:"str"}],operands:1,check:!0},g[o.OpenDynamicElement]={name:"OpenDynamicElement",mnemonic:"apnd_dyntag",before:null,stackChange:-1,ops:[],operands:0,check:!0},g[o.PushRemoteElement]={name:"PushRemoteElement",mnemonic:"apnd_remotetag",before:null,stackChange:-3,ops:[],operands:0,check:!0},g[o.StaticAttr]={name:"StaticAttr",mnemonic:"apnd_attr",before:null,stackChange:0,ops:[{name:"name",type:"str"},{name:"value",type:"str"},{name:"namespace",type:"option-str"}],operands:3,check:!0},g[o.DynamicAttr]={name:"DynamicAttr",mnemonic:"apnd_dynattr",before:null,stackChange:-1,ops:[{name:"name",type:"str"},{name:"trusting",type:"bool"},{name:"namespace",type:"option-str"}],operands:3,check:!0},g[o.ComponentAttr]={name:"ComponentAttr",mnemonic:"apnd_cattr",before:null,stackChange:-1,ops:[{name:"name",type:"str"},{name:"trusting",type:"bool"},{name:"namespace",type:"option-str"}],operands:3,check:!0},g[o.FlushElement]={name:"FlushElement",mnemonic:"apnd_flushtag",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.CloseElement]={name:"CloseElement",mnemonic:"apnd_closetag",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.PopRemoteElement]={name:"PopRemoteElement",mnemonic:"apnd_closeremotetag",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.Modifier]={name:"Modifier",mnemonic:"apnd_modifier",before:null,stackChange:-1,ops:[{name:"helper",type:"handle"}],operands:1,check:!0},g[o.BindDynamicScope]={name:"BindDynamicScope",mnemonic:"setdynscope",before:null,stackChange:null,ops:[{name:"names",type:"str-array"}],operands:1,check:!0},g[o.PushDynamicScope]={name:"PushDynamicScope",mnemonic:"dynscopepush",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.PopDynamicScope]={name:"PopDynamicScope",mnemonic:"dynscopepop",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.CompileBlock]={name:"CompileBlock",mnemonic:"cmpblock",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.PushBlockScope]={name:"PushBlockScope",mnemonic:"scopeload",before:null,stackChange:1,ops:[{name:"scope",type:"scope"}],operands:1,check:!0},g[o.PushSymbolTable]={name:"PushSymbolTable",mnemonic:"dsymload",before:null,stackChange:1,ops:[{name:"table",type:"symbol-table"}],operands:1,check:!0},g[o.InvokeYield]={name:"InvokeYield",mnemonic:"invokeyield",before:null,stackChange:null,ops:[],operands:0,check:!0},g[o.JumpIf]={name:"JumpIf",mnemonic:"iftrue",before:null,stackChange:-1,ops:[{name:"to",type:"u32"}],operands:1,check:!0},g[o.JumpUnless]={name:"JumpUnless",mnemonic:"iffalse",before:null,stackChange:-1,ops:[{name:"to",type:"u32"}],operands:1,check:!0},g[o.JumpEq]={name:"JumpEq",mnemonic:"ifeq",before:null,stackChange:0,ops:[{name:"to",type:"i32"},{name:"comparison",type:"i32"}],operands:2,check:!0},g[o.AssertSame]={name:"AssertSame",mnemonic:"assert_eq",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.Enter]={name:"Enter",mnemonic:"blk_start",before:null,stackChange:0,ops:[{name:"args",type:"u32"}],operands:1,check:!0},g[o.Exit]={name:"Exit",mnemonic:"blk_end",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.ToBoolean]={name:"ToBoolean",mnemonic:"anytobool",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.EnterList]={name:"EnterList",mnemonic:"list_start",before:null,stackChange:null,ops:[{name:"address",type:"u32"},{name:"address",type:"u32"}],operands:2,check:!0},g[o.ExitList]={name:"ExitList",mnemonic:"list_end",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.Iterate]={name:"Iterate",mnemonic:"iter",before:null,stackChange:0,ops:[{name:"end",type:"u32"}],operands:1,check:!1},g[o.Main]={name:"Main",mnemonic:"main",before:null,stackChange:-2,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.ContentType]={name:"ContentType",mnemonic:"ctload",before:null,stackChange:1,ops:[],operands:0,check:!0},g[o.DynamicContentType]={name:"DynamicContentType",mnemonic:"dctload",before:null,stackChange:1,ops:[],operands:0,check:!0},g[o.Curry]={name:"Curry",mnemonic:"curry",before:null,stackChange:null,ops:[{name:"type",type:"u32"},{name:"is-strict",type:"bool"}],operands:2,check:!0},g[o.PushComponentDefinition]={name:"PushComponentDefinition",mnemonic:"cmload",before:null,stackChange:1,ops:[{name:"spec",type:"handle"}],operands:1,check:!0},g[o.PushDynamicComponentInstance]={name:"PushDynamicComponentInstance",mnemonic:"dciload",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.ResolveDynamicComponent]={name:"ResolveDynamicComponent",mnemonic:"cdload",before:null,stackChange:0,ops:[{name:"owner",type:"owner"}],operands:1,check:!0},g[o.PushArgs]={name:"PushArgs",mnemonic:"argsload",before:null,stackChange:null,ops:[{name:"names",type:"str-array"},{name:"block-names",type:"str-array"},{name:"flags",type:"u32"}],operands:3,check:!0},g[o.PushEmptyArgs]={name:"PushEmptyArgs",mnemonic:"emptyargsload",before:null,stackChange:1,ops:[],operands:0,check:!0},g[o.PopArgs]={name:"PopArgs",mnemonic:"argspop",before:null,stackChange:null,ops:[],operands:0,check:!0},g[o.PrepareArgs]={name:"PrepareArgs",mnemonic:"argsprep",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!1},g[o.CaptureArgs]={name:"CaptureArgs",mnemonic:"argscapture",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.CreateComponent]={name:"CreateComponent",mnemonic:"comp_create",before:null,stackChange:0,ops:[{name:"flags",type:"u32"},{name:"state",type:"register"}],operands:2,check:!0},g[o.RegisterComponentDestructor]={name:"RegisterComponentDestructor",mnemonic:"comp_dest",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.PutComponentOperations]={name:"PutComponentOperations",mnemonic:"comp_elops",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.GetComponentSelf]={name:"GetComponentSelf",mnemonic:"comp_selfload",before:null,stackChange:1,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.GetComponentTagName]={name:"GetComponentTagName",mnemonic:"comp_tagload",before:null,stackChange:1,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.GetComponentLayout]={name:"GetComponentLayout",mnemonic:"comp_layoutload",before:null,stackChange:2,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.BindEvalScope]={name:"BindEvalScope",mnemonic:"eval_scope",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.SetupForEval]={name:"SetupForEval",mnemonic:"eval_setup",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.PopulateLayout]={name:"PopulateLayout",mnemonic:"comp_layoutput",before:null,stackChange:-2,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.InvokeComponentLayout]={name:"InvokeComponentLayout",mnemonic:"comp_invokelayout",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.BeginComponentTransaction]={name:"BeginComponentTransaction",mnemonic:"comp_begin",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.CommitComponentTransaction]={name:"CommitComponentTransaction",mnemonic:"comp_commit",before:null,stackChange:0,ops:[],operands:0,check:!0},g[o.DidCreateElement]={name:"DidCreateElement",mnemonic:"comp_created",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.DidRenderLayout]={name:"DidRenderLayout",mnemonic:"comp_rendered",before:null,stackChange:0,ops:[{name:"state",type:"register"}],operands:1,check:!0},g[o.ResolveMaybeLocal]={name:"ResolveMaybeLocal",mnemonic:"eval_varload",before:null,stackChange:1,ops:[{name:"local",type:"str"}],operands:1,check:!0},g[o.Debugger]={name:"Debugger",mnemonic:"debugger",before:null,stackChange:0,ops:[{name:"symbols",type:"str-array"},{name:"debugInfo",type:"array"}],operands:2,check:!0};const $=["u32","i32","owner","handle","str","option-str","array","str-array","bool","primitive","register","unknown","symbol-table","scope"];function E(e,n){let t;if(void 0===n.format)throw new Error(`Missing format in ${JSON.stringify(n)}`);t=Array.isArray(n.format)?n.format[0]:n.format;let a=Array.isArray(n.format)?function(e){if(!Array.isArray(e))throw new Error(`Expected operands array, got ${JSON.stringify(e)}`);return e.map(D)}(n.format.slice(1)):[];return{name:t,mnemonic:e,before:null,stackChange:P(n["operand-stack"]),ops:a,operands:a.length,check:!0!==n.skip}}function P(e){if(void 0===e)return 0;let n=e[0],t=e[1];return _(n)||_(t)?null:t.length-n.length}function _(e){if(!Array.isArray(e))throw new Error(`Unexpected stack entry: ${JSON.stringify(e)}`);return e.some((e=>"..."===e.slice(-3)))}function D(e){let[n,t]=e.split(":");if(a=t,-1!==$.indexOf(a))return{name:n,type:t};throw new Error(`Expected operand, found ${JSON.stringify(e)}`);var a}function T(e){return{machine:O(e.machine),syscall:O(e.syscall)}}function O(e){let n=Object.create(null);for(const[t,a]of Object.entries(e))n[t]=E(t,a);return n}function R(e,n,t,a){let o,r=[`export enum ${e} {`];Object.values(n).forEach(((e,n)=>{r.push(`  ${e.name} = ${t+n},`),o=n})),r.push(`  Size = ${o+t+1},`),r.push("}");let c,s=r.join("\n");return c=a?j`
      export function is${e}(value: number): value is ${e} {
        return value >= ${t} && value <= ${a};
      }
    `:j`
      export function is${e}(value: number): value is ${e} {
        return value >= ${t};
      }
    `,{enumString:s,predicate:c}}function j(e){let n="";for(var t=arguments.length,a=new Array(t>1?t-1:0),o=1;o<t;o++)a[o-1]=arguments[o];for(let t=0;t<e.length;t++){n+=`${e[t]}${void 0!==a[t]?String(a[t]):""}`}n=/^\s*?\n?([\s\S]*?)\s*$/u.exec(n)[1];let r=9007199254740991;for(let e of n.split("\n")){let n=/^\s*/u.exec(e)[0].length;r=Math.min(r,n)}let c="";for(let e of n.split("\n"))c+=e.slice(r)+"\n";return c}const B=["METADATA","MACHINE_METADATA"];function M(e,n,t){return`${e}[${"MACHINE_METADATA"===e?"MachineOp":"Op"}.${n[t].name}] = ${I(n[t],0)};`}function I(e,n){if("object"!=typeof e||null===e)return"string"==typeof e?`'${e}'`:JSON.stringify(e);if(Array.isArray(e))return`[${e.map((e=>I(e,n))).join(", ")}]`;let t=["{"];for(let a of Object.keys(e))t.push(`${" ".repeat(n+2)}${a}: ${I(e[a],n+2)},`);return t.push(`${" ".repeat(n)}}`),t.join("\n")}function L(e,n){let t=[];for(let a of Object.keys(n))t.push(M(e,n,a));return t.join("\n\n")}function N(e){return new class{validate(n){return e().validate(n)}expected(){return e().expected()}}}class G{constructor(e){this.expectedType=e}validate(e){return typeof e===this.expectedType}expected(){return`typeof ${this.expectedType}`}}class H{constructor(e){this.Class=e}validate(e){return!!e&&e instanceof this.Class}expected(){return`an instance of ${this.Class.name}`}}class J{constructor(e,n){this.checker=e,this.emptyValue=n}validate(e){return e===this.emptyValue||this.checker.validate(e)}expected(){return`${this.checker.expected()} or null`}}class V{constructor(e){this.checker=e}validate(e){return null==e||this.checker.validate(e)}expected(){return`${this.checker.expected()} or null or undefined`}}class F{constructor(e,n){this.left=e,this.right=n}validate(e){return this.left.validate(e)||this.right.validate(e)}expected(){return`${this.left.expected()} or ${this.right.expected()}`}}class U{constructor(e,n){this.value=e,this.desc=n}validate(e){return e===this.value}expected(){return this.desc}}class q{constructor(e){this.checkers=e}validate(e){return"object"==typeof e&&(null!=e&&Object.entries(this.checkers).every((n=>{let[t,a]=n;return t in e&&a.validate(e[t])})))}expected(){return`{ ${Object.entries(this.checkers).map((e=>{let[n,t]=e;return`${n}: ${t.expected()}`})).join(",")} }`}}class z{constructor(e){this.checker=e}validate(e){return null!=e&&(!!Array.isArray(e)&&e.every((e=>this.checker.validate(e))))}expected(){return`Array<${this.checker.expected()}>`}}class Y{constructor(e){this.checker=e}validate(e){if(!("object"==typeof e&&null!==e&&null===Object.getPrototypeOf(e)))return!1;let{checker:n}=this;for(let t in e)if(!n.validate(e[t]))return!1;return!0}expected(){return"a primitive"}}function W(e){return new H(e)}function K(e){return new J(e,null)}function Q(e){return new V(e)}function X(e){return new q(e)}function Z(e){return new z(e)}function ee(e){return new Y(e)}function ne(e,n){return`Got ${e}, expected:\n${n}`}function te(e,n){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ne;if("function"==typeof n)return n(e),e;if(n.validate(e))return e;throw new Error(t(e,n.expected()))}let ae=0;function oe(e){ae=e}function re(e,n,t){let a=e.sp-ae;if(a!==n)throw new Error(`Expected stack to change by ${n}, but it changed by ${a} in ${t}`)}const ce=new class{validate(e){return"string"!=typeof e||"number"==typeof e||"string"==typeof e||null==e}expected(){return"a primitive"}},se=new G("function"),pe=new G("number"),me=new G("boolean"),le=pe,ie=new G("string"),ue=new class{validate(e){return null===e}expected(){return"null"}},he=new class{type;validate(e){return!0}expected(){return"any"}},de=new class{validate(e){return"object"==typeof e&&null!==e&&"function"==typeof e.toHTML}expected(){return"SafeString"}},fe=new class{validate(e){return"function"==typeof e||"object"==typeof e&&null!==e}expected(){return"an object or function (valid WeakMap key)"}};function ke(e,n){return new F(e,n)}function ye(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:String(e);return new U(e,n)}const ge=X({parameters:Z(pe)}),be=X({hasEval:me,symbols:Z(ie)}),Ce=X({nodeType:ye(1),tagName:ie,nextSibling:he}),ve=X({nodeType:ye(11),nextSibling:he}),Se=X({nodeType:pe,nextSibling:he});export{Z as CheckArray,ge as CheckBlockSymbolTable,me as CheckBoolean,ee as CheckDict,ve as CheckDocumentFragment,Ce as CheckElement,se as CheckFunction,le as CheckHandle,W as CheckInstanceof,X as CheckInterface,Q as CheckMaybe,Se as CheckNode,ue as CheckNull,pe as CheckNumber,fe as CheckObject,K as CheckOption,ke as CheckOr,ce as CheckPrimitive,be as CheckProgramSymbolTable,de as CheckSafeString,ie as CheckString,he as CheckUnknown,ye as CheckValue,B as META_KIND,$ as OPERAND_TYPES,R as buildEnum,L as buildMetas,M as buildSingleMeta,te as check,S as debug,C as debugSlice,re as expectStackChange,v as logOpcode,E as normalize,T as normalizeAll,O as normalizeParsed,y as opcodeMetadata,oe as recordStackSize,j as strip,N as wrap};
//# sourceMappingURL=index.js.map
