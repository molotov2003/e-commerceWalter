{"version":3,"file":"index.js","sources":["../../../local-debug-flags/index.ts","../../lib/opcode-metadata.ts","../../lib/debug.ts","../../lib/metadata.ts","../../lib/stack-check.ts"],"sourcesContent":["\n\nexport const LOCAL_DEBUG: true | false =\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  import.meta.env.VM_LOCAL_DEV &&\n  (() => {\n    let location = typeof window !== 'undefined' && window.location;\n    if (location && /[&?]disable_local_debug/u.test(window.location.search)) {\n      return false;\n    }\n    return true;\n  })();\n\nexport const LOCAL_SHOULD_LOG: true | false =\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  import.meta.env.VM_LOCAL_DEV &&\n  (() => {\n    let location = typeof window !== 'undefined' && window.location;\n    if (location && /[&?]enable_local_should_log/u.test(window.location.search)) {\n      return true;\n    }\n    return false;\n  })();\n","/* This file is generated by build/debug.js */\n\nimport type { Nullable, VmMachineOp, VmOp } from \"@glimmer/interfaces\";\nimport { MachineOp, Op } from '@glimmer/vm';\n\nimport type { NormalizedMetadata } from './metadata';\n\nfunction fillNulls<T>(count: number): T[] {\n  let arr = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    arr[i] = null;\n  }\n\n  return arr;\n}\n\nexport function opcodeMetadata(\n  op: VmMachineOp | VmOp,\n  isMachine: 0 | 1\n): Nullable<NormalizedMetadata> {\n  let value = isMachine ? MACHINE_METADATA[op] : METADATA[op];\n\n  return value || null;\n}\n\nconst METADATA: Nullable<NormalizedMetadata>[] = fillNulls(Op.Size);\nconst MACHINE_METADATA: Nullable<NormalizedMetadata>[] = fillNulls(MachineOp.Size);\nMACHINE_METADATA[MachineOp.PushFrame] = {\n  name: 'PushFrame',\n  mnemonic: 'pushf',\n  before: null,\n  stackChange: 2,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMACHINE_METADATA[MachineOp.PopFrame] = {\n  name: 'PopFrame',\n  mnemonic: 'popf',\n  before: null,\n  stackChange: -2,\n  ops: [],\n  operands: 0,\n  check: false,\n};\n\nMACHINE_METADATA[MachineOp.InvokeVirtual] = {\n  name: 'InvokeVirtual',\n  mnemonic: 'vcall',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMACHINE_METADATA[MachineOp.InvokeStatic] = {\n  name: 'InvokeStatic',\n  mnemonic: 'scall',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'offset',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMACHINE_METADATA[MachineOp.Jump] = {\n  name: 'Jump',\n  mnemonic: 'goto',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'to',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMACHINE_METADATA[MachineOp.Return] = {\n  name: 'Return',\n  mnemonic: 'ret',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: false,\n};\n\nMACHINE_METADATA[MachineOp.ReturnTo] = {\n  name: 'ReturnTo',\n  mnemonic: 'setra',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'offset',\n      type: 'i32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\nMETADATA[Op.Helper] = {\n  name: 'Helper',\n  mnemonic: 'ncall',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'helper',\n      type: 'handle',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.DynamicHelper] = {\n  name: 'DynamicHelper',\n  mnemonic: 'dynamiccall',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.SetNamedVariables] = {\n  name: 'SetNamedVariables',\n  mnemonic: 'vsargs',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.SetBlocks] = {\n  name: 'SetBlocks',\n  mnemonic: 'vbblocks',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.SetVariable] = {\n  name: 'SetVariable',\n  mnemonic: 'sbvar',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'symbol',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.SetBlock] = {\n  name: 'SetBlock',\n  mnemonic: 'sblock',\n  before: null,\n  stackChange: -3,\n  ops: [\n    {\n      name: 'symbol',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.GetVariable] = {\n  name: 'GetVariable',\n  mnemonic: 'symload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'symbol',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.GetProperty] = {\n  name: 'GetProperty',\n  mnemonic: 'getprop',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'property',\n      type: 'str',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.GetBlock] = {\n  name: 'GetBlock',\n  mnemonic: 'blockload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'block',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.SpreadBlock] = {\n  name: 'SpreadBlock',\n  mnemonic: 'blockspread',\n  before: null,\n  stackChange: 2,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.HasBlock] = {\n  name: 'HasBlock',\n  mnemonic: 'hasblockload',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.HasBlockParams] = {\n  name: 'HasBlockParams',\n  mnemonic: 'hasparamsload',\n  before: null,\n  stackChange: -2,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Concat] = {\n  name: 'Concat',\n  mnemonic: 'concat',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'count',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.IfInline] = {\n  name: 'IfInline',\n  mnemonic: 'ifinline',\n  before: null,\n  stackChange: -2,\n  ops: [\n    {\n      name: 'count',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Not] = {\n  name: 'Not',\n  mnemonic: 'not',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'count',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Constant] = {\n  name: 'Constant',\n  mnemonic: 'rconstload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'constant',\n      type: 'unknown',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.ConstantReference] = {\n  name: 'ConstantReference',\n  mnemonic: 'rconstrefload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'constant',\n      type: 'unknown',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Primitive] = {\n  name: 'Primitive',\n  mnemonic: 'pconstload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'constant',\n      type: 'primitive',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PrimitiveReference] = {\n  name: 'PrimitiveReference',\n  mnemonic: 'ptoref',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.ReifyU32] = {\n  name: 'ReifyU32',\n  mnemonic: 'reifyload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Dup] = {\n  name: 'Dup',\n  mnemonic: 'dup',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n    {\n      name: 'offset',\n      type: 'u32',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n\nMETADATA[Op.Pop] = {\n  name: 'Pop',\n  mnemonic: 'pop',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'count',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: false,\n};\n\nMETADATA[Op.Load] = {\n  name: 'Load',\n  mnemonic: 'put',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Fetch] = {\n  name: 'Fetch',\n  mnemonic: 'regload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.RootScope] = {\n  name: 'RootScope',\n  mnemonic: 'rscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'symbols',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.VirtualRootScope] = {\n  name: 'VirtualRootScope',\n  mnemonic: 'vrscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'register',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.ChildScope] = {\n  name: 'ChildScope',\n  mnemonic: 'cscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PopScope] = {\n  name: 'PopScope',\n  mnemonic: 'scopepop',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Text] = {\n  name: 'Text',\n  mnemonic: 'apnd_text',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'contents',\n      type: 'str',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Comment] = {\n  name: 'Comment',\n  mnemonic: 'apnd_comment',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'contents',\n      type: 'str',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.AppendHTML] = {\n  name: 'AppendHTML',\n  mnemonic: 'apnd_dynhtml',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.AppendSafeHTML] = {\n  name: 'AppendSafeHTML',\n  mnemonic: 'apnd_dynshtml',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.AppendDocumentFragment] = {\n  name: 'AppendDocumentFragment',\n  mnemonic: 'apnd_dynfrag',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.AppendNode] = {\n  name: 'AppendNode',\n  mnemonic: 'apnd_dynnode',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.AppendText] = {\n  name: 'AppendText',\n  mnemonic: 'apnd_dyntext',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.OpenElement] = {\n  name: 'OpenElement',\n  mnemonic: 'apnd_tag',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'tag',\n      type: 'str',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.OpenDynamicElement] = {\n  name: 'OpenDynamicElement',\n  mnemonic: 'apnd_dyntag',\n  before: null,\n  stackChange: -1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PushRemoteElement] = {\n  name: 'PushRemoteElement',\n  mnemonic: 'apnd_remotetag',\n  before: null,\n  stackChange: -3,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.StaticAttr] = {\n  name: 'StaticAttr',\n  mnemonic: 'apnd_attr',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'name',\n      type: 'str',\n    },\n    {\n      name: 'value',\n      type: 'str',\n    },\n    {\n      name: 'namespace',\n      type: 'option-str',\n    },\n  ],\n  operands: 3,\n  check: true,\n};\n\nMETADATA[Op.DynamicAttr] = {\n  name: 'DynamicAttr',\n  mnemonic: 'apnd_dynattr',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'name',\n      type: 'str',\n    },\n    {\n      name: 'trusting',\n      type: 'bool',\n    },\n    {\n      name: 'namespace',\n      type: 'option-str',\n    },\n  ],\n  operands: 3,\n  check: true,\n};\n\nMETADATA[Op.ComponentAttr] = {\n  name: 'ComponentAttr',\n  mnemonic: 'apnd_cattr',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'name',\n      type: 'str',\n    },\n    {\n      name: 'trusting',\n      type: 'bool',\n    },\n    {\n      name: 'namespace',\n      type: 'option-str',\n    },\n  ],\n  operands: 3,\n  check: true,\n};\n\nMETADATA[Op.FlushElement] = {\n  name: 'FlushElement',\n  mnemonic: 'apnd_flushtag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.CloseElement] = {\n  name: 'CloseElement',\n  mnemonic: 'apnd_closetag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PopRemoteElement] = {\n  name: 'PopRemoteElement',\n  mnemonic: 'apnd_closeremotetag',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Modifier] = {\n  name: 'Modifier',\n  mnemonic: 'apnd_modifier',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'helper',\n      type: 'handle',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.BindDynamicScope] = {\n  name: 'BindDynamicScope',\n  mnemonic: 'setdynscope',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'names',\n      type: 'str-array',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PushDynamicScope] = {\n  name: 'PushDynamicScope',\n  mnemonic: 'dynscopepush',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PopDynamicScope] = {\n  name: 'PopDynamicScope',\n  mnemonic: 'dynscopepop',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.CompileBlock] = {\n  name: 'CompileBlock',\n  mnemonic: 'cmpblock',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PushBlockScope] = {\n  name: 'PushBlockScope',\n  mnemonic: 'scopeload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'scope',\n      type: 'scope',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PushSymbolTable] = {\n  name: 'PushSymbolTable',\n  mnemonic: 'dsymload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'table',\n      type: 'symbol-table',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.InvokeYield] = {\n  name: 'InvokeYield',\n  mnemonic: 'invokeyield',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.JumpIf] = {\n  name: 'JumpIf',\n  mnemonic: 'iftrue',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'to',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.JumpUnless] = {\n  name: 'JumpUnless',\n  mnemonic: 'iffalse',\n  before: null,\n  stackChange: -1,\n  ops: [\n    {\n      name: 'to',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.JumpEq] = {\n  name: 'JumpEq',\n  mnemonic: 'ifeq',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'to',\n      type: 'i32',\n    },\n    {\n      name: 'comparison',\n      type: 'i32',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n\nMETADATA[Op.AssertSame] = {\n  name: 'AssertSame',\n  mnemonic: 'assert_eq',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Enter] = {\n  name: 'Enter',\n  mnemonic: 'blk_start',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'args',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Exit] = {\n  name: 'Exit',\n  mnemonic: 'blk_end',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.ToBoolean] = {\n  name: 'ToBoolean',\n  mnemonic: 'anytobool',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.EnterList] = {\n  name: 'EnterList',\n  mnemonic: 'list_start',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'address',\n      type: 'u32',\n    },\n    {\n      name: 'address',\n      type: 'u32',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n\nMETADATA[Op.ExitList] = {\n  name: 'ExitList',\n  mnemonic: 'list_end',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Iterate] = {\n  name: 'Iterate',\n  mnemonic: 'iter',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'end',\n      type: 'u32',\n    },\n  ],\n  operands: 1,\n  check: false,\n};\n\nMETADATA[Op.Main] = {\n  name: 'Main',\n  mnemonic: 'main',\n  before: null,\n  stackChange: -2,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.ContentType] = {\n  name: 'ContentType',\n  mnemonic: 'ctload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.DynamicContentType] = {\n  name: 'DynamicContentType',\n  mnemonic: 'dctload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.Curry] = {\n  name: 'Curry',\n  mnemonic: 'curry',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'type',\n      type: 'u32',\n    },\n    {\n      name: 'is-strict',\n      type: 'bool',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n\nMETADATA[Op.PushComponentDefinition] = {\n  name: 'PushComponentDefinition',\n  mnemonic: 'cmload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'spec',\n      type: 'handle',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PushDynamicComponentInstance] = {\n  name: 'PushDynamicComponentInstance',\n  mnemonic: 'dciload',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.ResolveDynamicComponent] = {\n  name: 'ResolveDynamicComponent',\n  mnemonic: 'cdload',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'owner',\n      type: 'owner',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PushArgs] = {\n  name: 'PushArgs',\n  mnemonic: 'argsload',\n  before: null,\n  stackChange: null,\n  ops: [\n    {\n      name: 'names',\n      type: 'str-array',\n    },\n    {\n      name: 'block-names',\n      type: 'str-array',\n    },\n    {\n      name: 'flags',\n      type: 'u32',\n    },\n  ],\n  operands: 3,\n  check: true,\n};\n\nMETADATA[Op.PushEmptyArgs] = {\n  name: 'PushEmptyArgs',\n  mnemonic: 'emptyargsload',\n  before: null,\n  stackChange: 1,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PopArgs] = {\n  name: 'PopArgs',\n  mnemonic: 'argspop',\n  before: null,\n  stackChange: null,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.PrepareArgs] = {\n  name: 'PrepareArgs',\n  mnemonic: 'argsprep',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: false,\n};\n\nMETADATA[Op.CaptureArgs] = {\n  name: 'CaptureArgs',\n  mnemonic: 'argscapture',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.CreateComponent] = {\n  name: 'CreateComponent',\n  mnemonic: 'comp_create',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'flags',\n      type: 'u32',\n    },\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n\nMETADATA[Op.RegisterComponentDestructor] = {\n  name: 'RegisterComponentDestructor',\n  mnemonic: 'comp_dest',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PutComponentOperations] = {\n  name: 'PutComponentOperations',\n  mnemonic: 'comp_elops',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.GetComponentSelf] = {\n  name: 'GetComponentSelf',\n  mnemonic: 'comp_selfload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.GetComponentTagName] = {\n  name: 'GetComponentTagName',\n  mnemonic: 'comp_tagload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.GetComponentLayout] = {\n  name: 'GetComponentLayout',\n  mnemonic: 'comp_layoutload',\n  before: null,\n  stackChange: 2,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.BindEvalScope] = {\n  name: 'BindEvalScope',\n  mnemonic: 'eval_scope',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.SetupForEval] = {\n  name: 'SetupForEval',\n  mnemonic: 'eval_setup',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.PopulateLayout] = {\n  name: 'PopulateLayout',\n  mnemonic: 'comp_layoutput',\n  before: null,\n  stackChange: -2,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.InvokeComponentLayout] = {\n  name: 'InvokeComponentLayout',\n  mnemonic: 'comp_invokelayout',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.BeginComponentTransaction] = {\n  name: 'BeginComponentTransaction',\n  mnemonic: 'comp_begin',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.CommitComponentTransaction] = {\n  name: 'CommitComponentTransaction',\n  mnemonic: 'comp_commit',\n  before: null,\n  stackChange: 0,\n  ops: [],\n  operands: 0,\n  check: true,\n};\n\nMETADATA[Op.DidCreateElement] = {\n  name: 'DidCreateElement',\n  mnemonic: 'comp_created',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.DidRenderLayout] = {\n  name: 'DidRenderLayout',\n  mnemonic: 'comp_rendered',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'state',\n      type: 'register',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.ResolveMaybeLocal] = {\n  name: 'ResolveMaybeLocal',\n  mnemonic: 'eval_varload',\n  before: null,\n  stackChange: 1,\n  ops: [\n    {\n      name: 'local',\n      type: 'str',\n    },\n  ],\n  operands: 1,\n  check: true,\n};\n\nMETADATA[Op.Debugger] = {\n  name: 'Debugger',\n  mnemonic: 'debugger',\n  before: null,\n  stackChange: 0,\n  ops: [\n    {\n      name: 'symbols',\n      type: 'str-array',\n    },\n    {\n      name: 'debugInfo',\n      type: 'array',\n    },\n  ],\n  operands: 2,\n  check: true,\n};\n","import type {\n  CompileTimeConstants,\n  Dict,\n  Maybe,\n  Recast,\n  ResolutionTimeConstants,\n  RuntimeOp,\n  TemplateCompilationContext,\n} from \"@glimmer/interfaces\";\nimport { LOCAL_SHOULD_LOG } from '@glimmer/local-debug-flags';\nimport { decodeHandle, decodeImmediate, enumerate, LOCAL_LOGGER } from '@glimmer/util';\nimport { $fp, $pc, $ra, $s0, $s1, $sp, $t0, $t1, $v0, type Register } from '@glimmer/vm';\n\nimport { opcodeMetadata } from './opcode-metadata';\nimport type { Primitive } from './stack-check';\n\nexport interface DebugConstants {\n  getValue<T>(handle: number): T;\n  getArray<T>(value: number): T[];\n}\n\nexport function debugSlice(context: TemplateCompilationContext, start: number, end: number) {\n  if (LOCAL_SHOULD_LOG) {\n    LOCAL_LOGGER.group(`%c${start}:${end}`, 'color: #999');\n\n    let heap = context.program.heap;\n    let opcode = context.program.createOp(heap);\n\n    let _size = 0;\n    for (let i = start; i < end; i = i + _size) {\n      opcode.offset = i;\n      let [name, params] = debug(\n        context.program.constants as Recast<\n          CompileTimeConstants & ResolutionTimeConstants,\n          DebugConstants\n        >,\n        opcode,\n        opcode.isMachine\n      )!;\n      LOCAL_LOGGER.log(`${i}. ${logOpcode(name, params)}`);\n      _size = opcode.size;\n    }\n    opcode.offset = -_size;\n    LOCAL_LOGGER.groupEnd();\n  }\n}\n\nexport function logOpcode(type: string, params: Maybe<Dict>): string | void {\n  if (LOCAL_SHOULD_LOG) {\n    let out = type;\n\n    if (params) {\n      let args = Object.keys(params)\n        .map((p) => ` ${p}=${json(params[p])}`)\n        .join('');\n      out += args;\n    }\n    return `(${out})`;\n  }\n}\n\nfunction json(param: unknown) {\n  if (LOCAL_SHOULD_LOG) {\n    if (typeof param === 'function') {\n      return '<function>';\n    }\n\n    let string;\n    try {\n      string = JSON.stringify(param);\n    } catch (e) {\n      return '<object>';\n    }\n\n    if (string === undefined) {\n      return 'undefined';\n    }\n\n    let debug = JSON.parse(string);\n    if (typeof debug === 'object' && debug !== null && debug.GlimmerDebug !== undefined) {\n      return debug.GlimmerDebug;\n    }\n\n    return string;\n  }\n}\n\nexport function debug(\n  c: DebugConstants,\n  op: RuntimeOp,\n  isMachine: 0 | 1\n): [string, Dict] | undefined {\n  if (LOCAL_SHOULD_LOG) {\n    let metadata = opcodeMetadata(op.type, isMachine);\n\n    if (!metadata) {\n      throw new Error(`Missing Opcode Metadata for ${op}`);\n    }\n\n    let out = Object.create(null);\n\n    for (const [index, operand] of enumerate(metadata.ops)) {\n      let actualOperand = opcodeOperand(op, index);\n\n      switch (operand.type) {\n        case 'u32':\n        case 'i32':\n        case 'owner':\n          out[operand.name] = actualOperand;\n          break;\n        case 'handle':\n          out[operand.name] = c.getValue(actualOperand);\n          break;\n        case 'str':\n        case 'option-str':\n        case 'array':\n          out[operand.name] = c.getValue(actualOperand);\n          break;\n        case 'str-array':\n          out[operand.name] = c.getArray(actualOperand);\n          break;\n        case 'bool':\n          out[operand.name] = !!actualOperand;\n          break;\n        case 'primitive':\n          out[operand.name] = decodePrimitive(actualOperand, c);\n          break;\n        case 'register':\n          out[operand.name] = decodeRegister(actualOperand);\n          break;\n        case 'unknown':\n          out[operand.name] = c.getValue(actualOperand);\n          break;\n        case 'symbol-table':\n        case 'scope':\n          out[operand.name] = `<scope ${actualOperand}>`;\n          break;\n        default:\n          throw new Error(`Unexpected operand type ${operand.type} for debug output`);\n      }\n    }\n\n    return [metadata.name, out];\n  }\n\n  return undefined;\n}\n\nfunction opcodeOperand(opcode: RuntimeOp, index: number): number {\n  switch (index) {\n    case 0:\n      return opcode.op1;\n    case 1:\n      return opcode.op2;\n    case 2:\n      return opcode.op3;\n    default:\n      throw new Error(`Unexpected operand index (must be 0-2)`);\n  }\n}\n\nfunction decodeRegister(register: Register): string {\n  switch (register) {\n    case $pc:\n      return 'pc';\n    case $ra:\n      return 'ra';\n    case $fp:\n      return 'fp';\n    case $sp:\n      return 'sp';\n    case $s0:\n      return 's0';\n    case $s1:\n      return 's1';\n    case $t0:\n      return 't0';\n    case $t1:\n      return 't1';\n    case $v0:\n      return 'v0';\n  }\n}\n\nfunction decodePrimitive(primitive: number, constants: DebugConstants): Primitive {\n  if (primitive >= 0) {\n    return constants.getValue(decodeHandle(primitive));\n  }\n  return decodeImmediate(primitive);\n}\n","import type { Dict, Nullable, PresentArray } from '@glimmer/interfaces';\n\n// TODO: How do these map onto constant and machine types?\nexport const OPERAND_TYPES = [\n  'u32',\n  'i32',\n  'owner',\n  'handle',\n  'str',\n  'option-str',\n  'array',\n  'str-array',\n  'bool',\n  'primitive',\n  'register',\n  'unknown',\n  'symbol-table',\n  'scope',\n];\n\nfunction isOperandType(s: string): s is OperandType {\n  return OPERAND_TYPES.indexOf(s as any) !== -1;\n}\n\nexport type OperandType = (typeof OPERAND_TYPES)[number];\n\nexport interface Operand {\n  type: OperandType;\n  name: string;\n}\n\nexport type OperandList = ([] | [Operand] | [Operand, Operand] | [Operand, Operand, Operand]) &\n  Operand[];\n\nexport interface NormalizedMetadata {\n  name: string;\n  mnemonic: string;\n  before: null;\n  stackChange: Nullable<number>;\n  ops: OperandList;\n  operands: number;\n  check: boolean;\n}\n\nexport type Stack = [string[], string[]];\n\nexport interface RawOperandMetadata {\n  kind: 'machine' | 'syscall';\n  format: RawOperandFormat;\n  skip?: true;\n  operation: string;\n  'operand-stack'?: [string[], string[]];\n  notes?: string;\n}\n\nexport type OperandName = `${string}:${string}`;\nexport type RawOperandFormat = OperandName | PresentArray<OperandName>;\n\nexport function normalize(key: string, input: RawOperandMetadata): NormalizedMetadata {\n  let name: string;\n\n  if (input.format === undefined) {\n    throw new Error(`Missing format in ${JSON.stringify(input)}`);\n  }\n\n  if (Array.isArray(input.format)) {\n    name = input.format[0];\n  } else {\n    name = input.format;\n  }\n\n  let ops: OperandList = Array.isArray(input.format) ? operands(input.format.slice(1)) : [];\n\n  return {\n    name,\n    mnemonic: key,\n    before: null,\n    stackChange: stackChange(input['operand-stack']),\n    ops,\n    operands: ops.length,\n    check: input.skip === true ? false : true,\n  };\n}\n\nfunction stackChange(stack?: Stack): Nullable<number> {\n  if (stack === undefined) {\n    return 0;\n  }\n\n  let before = stack[0];\n  let after = stack[1];\n\n  if (hasRest(before) || hasRest(after)) {\n    return null;\n  }\n\n  return after.length - before.length;\n}\n\nfunction hasRest(input: string[]): boolean {\n  if (!Array.isArray(input)) {\n    throw new Error(`Unexpected stack entry: ${JSON.stringify(input)}`);\n  }\n  return input.some((s) => s.slice(-3) === '...');\n}\n\nfunction operands(input: `${string}:${string}`[]): OperandList {\n  if (!Array.isArray(input)) {\n    throw new Error(`Expected operands array, got ${JSON.stringify(input)}`);\n  }\n  return input.map(op) as OperandList;\n}\n\nfunction op(input: `${string}:${string}`): Operand {\n  let [name, type] = input.split(':') as [string, string];\n\n  if (isOperandType(type)) {\n    return { name, type };\n  } else {\n    throw new Error(`Expected operand, found ${JSON.stringify(input)}`);\n  }\n}\n\nexport interface NormalizedOpcodes {\n  readonly machine: Dict<NormalizedMetadata>;\n  readonly syscall: Dict<NormalizedMetadata>;\n}\n\nexport function normalizeAll(parsed: {\n  machine: Dict<RawOperandMetadata>;\n  syscall: Dict<RawOperandMetadata>;\n}): NormalizedOpcodes {\n  let machine = normalizeParsed(parsed.machine);\n  let syscall = normalizeParsed(parsed.syscall);\n\n  return { machine, syscall };\n}\n\nexport function normalizeParsed(parsed: Dict<RawOperandMetadata>): Dict<NormalizedMetadata> {\n  let out = Object.create(null) as Dict<NormalizedMetadata>;\n\n  for (const [key, value] of Object.entries(parsed)) {\n    out[key] = normalize(key, value);\n  }\n\n  return out;\n}\n\nexport function buildEnum(\n  name: string,\n  parsed: Dict<NormalizedMetadata>,\n  offset: number,\n  max?: number\n): { enumString: string; predicate: string } {\n  let e = [`export enum ${name} {`];\n\n  let last: number;\n\n  Object.values(parsed).forEach((value, i) => {\n    e.push(`  ${value.name} = ${offset + i},`);\n    last = i;\n  });\n\n  e.push(`  Size = ${last! + offset + 1},`);\n  e.push('}');\n\n  let enumString = e.join('\\n');\n\n  let predicate;\n\n  if (max) {\n    predicate = strip`\n      export function is${name}(value: number): value is ${name} {\n        return value >= ${offset} && value <= ${max};\n      }\n    `;\n  } else {\n    predicate = strip`\n      export function is${name}(value: number): value is ${name} {\n        return value >= ${offset};\n      }\n    `;\n  }\n\n  return { enumString, predicate };\n}\n\nexport function strip(strings: TemplateStringsArray, ...args: unknown[]) {\n  let out = '';\n  for (let i = 0; i < strings.length; i++) {\n    let string = strings[i];\n    let dynamic = args[i] !== undefined ? String(args[i]) : '';\n\n    out += `${string}${dynamic}`;\n  }\n\n  // eslint-disable-next-line regexp/no-super-linear-backtracking\n  out = /^\\s*?\\n?([\\s\\S]*?)\\s*$/u.exec(out)![1] as string;\n\n  let min = 9007199254740991; // Number.MAX_SAFE_INTEGER isn't available on IE11\n\n  for (let line of out.split('\\n')) {\n    let leading = /^\\s*/u.exec(line)![0].length;\n\n    min = Math.min(min, leading);\n  }\n\n  let stripped = '';\n\n  for (let line of out.split('\\n')) {\n    stripped += line.slice(min) + '\\n';\n  }\n\n  return stripped;\n}\n\nexport const META_KIND = ['METADATA', 'MACHINE_METADATA'];\nexport type META_KIND = (typeof META_KIND)[number];\n\nexport function buildSingleMeta<D extends Dict<NormalizedMetadata>>(\n  kind: META_KIND,\n  all: D,\n  key: keyof D\n): string {\n  let e = kind === 'MACHINE_METADATA' ? 'MachineOp' : 'Op';\n  return `${kind}[${e}.${all[key]!.name}] = ${stringify(all[key], 0)};`;\n}\n\nfunction stringify(o: unknown, pad: number): string {\n  if (typeof o !== 'object' || o === null) {\n    if (typeof o === 'string') {\n      return `'${o}'`;\n    }\n    return JSON.stringify(o);\n  }\n\n  if (Array.isArray(o)) {\n    return `[${o.map((v) => stringify(v, pad)).join(', ')}]`;\n  }\n\n  let out = ['{'];\n\n  for (let key of Object.keys(o)) {\n    out.push(`${' '.repeat(pad + 2)}${key}: ${stringify((o as Dict)[key], pad + 2)},`);\n  }\n\n  out.push(`${' '.repeat(pad)}}`);\n\n  return out.join('\\n');\n}\n\nexport function buildMetas(kind: META_KIND, all: Dict<NormalizedMetadata>): string {\n  let out = [];\n\n  for (let key of Object.keys(all)) {\n    out.push(buildSingleMeta(kind, all, key));\n  }\n\n  return out.join('\\n\\n');\n}\n","import type {\n  BlockSymbolTable,\n  Dict,\n  Maybe,\n  Nullable,\n  ProgramSymbolTable,\n  SimpleDocumentFragment,\n  SimpleElement,\n  SimpleNode,\n} from \"@glimmer/interfaces\";\n\nexport interface Checker<T> {\n  type: T;\n\n  validate(value: unknown): value is T;\n  expected(): string;\n}\n\nexport function wrap<T>(checker: () => Checker<T>): Checker<T> {\n  class Wrapped {\n    declare type: T;\n\n    validate(value: unknown): value is T {\n      return checker().validate(value);\n    }\n\n    expected(): string {\n      return checker().expected();\n    }\n  }\n\n  return new Wrapped();\n}\n\nexport interface Constructor<T> extends Function {\n  prototype: T;\n}\n\nclass TypeofChecker<T> implements Checker<T> {\n  declare type: T;\n\n  constructor(private expectedType: string) {}\n\n  validate(value: unknown): value is T {\n    return typeof value === this.expectedType;\n  }\n\n  expected(): string {\n    return `typeof ${this.expectedType}`;\n  }\n}\n\nexport type Primitive = undefined | null | boolean | number | string;\n\nclass PrimitiveChecker implements Checker<Primitive> {\n  declare type: Primitive;\n\n  validate(value: unknown): value is Primitive {\n    return (\n      typeof value !== 'string' ||\n      typeof value === 'number' ||\n      typeof value === 'string' ||\n      value === undefined ||\n      value === null\n    );\n  }\n\n  expected(): string {\n    return `a primitive`;\n  }\n}\n\nclass NullChecker implements Checker<null> {\n  declare type: null;\n\n  validate(value: unknown): value is null {\n    return value === null;\n  }\n\n  expected(): string {\n    return `null`;\n  }\n}\n\nclass InstanceofChecker<T> implements Checker<T> {\n  declare type: T;\n\n  constructor(private Class: Constructor<T>) {}\n\n  validate(value: unknown): value is T {\n    return value ? value instanceof this.Class : false;\n  }\n\n  expected(): string {\n    return `an instance of ${this.Class.name}`;\n  }\n}\n\nclass OptionChecker<T> implements Checker<Nullable<T>> {\n  declare type: Nullable<T>;\n\n  constructor(private checker: Checker<T>, private emptyValue: null | undefined) {}\n\n  validate(value: unknown): value is Nullable<T> {\n    if (value === this.emptyValue) return true;\n    return this.checker.validate(value);\n  }\n\n  expected(): string {\n    return `${this.checker.expected()} or null`;\n  }\n}\n\nclass MaybeChecker<T> implements Checker<Maybe<T>> {\n  declare type: Maybe<T>;\n\n  constructor(private checker: Checker<T>) {}\n\n  validate(value: unknown): value is Maybe<T> {\n    if (value === null || value === undefined) return true;\n    return this.checker.validate(value);\n  }\n\n  expected(): string {\n    return `${this.checker.expected()} or null or undefined`;\n  }\n}\n\nclass OrChecker<T, U> implements Checker<T | U> {\n  declare type: T | U;\n\n  constructor(private left: Checker<T>, private right: Checker<U>) {}\n\n  validate(value: unknown): value is T | U {\n    return this.left.validate(value) || this.right.validate(value);\n  }\n\n  expected(): string {\n    return `${this.left.expected()} or ${this.right.expected()}`;\n  }\n}\n\nclass ExactValueChecker<T> implements Checker<T> {\n  declare type: T;\n\n  constructor(private value: T, private desc: string) {}\n\n  validate(obj: unknown): obj is T {\n    return obj === this.value;\n  }\n\n  expected(): string {\n    return this.desc;\n  }\n}\n\nclass PropertyChecker<T> implements Checker<T> {\n  declare type: T;\n\n  constructor(private checkers: Dict<Checker<unknown>>) {}\n\n  validate(obj: unknown): obj is T {\n    if (typeof obj !== 'object') return false;\n    if (obj === null || obj === undefined) return false;\n\n    return Object.entries(this.checkers).every(([k, checker]) =>\n      k in obj ? checker.validate((obj as Dict)[k]) : false\n    );\n  }\n\n  expected(): string {\n    let pairs = Object.entries(this.checkers).map(([k, checker]) => {\n      return `${k}: ${checker.expected()}`;\n    });\n\n    return `{ ${pairs.join(',')} }`;\n  }\n}\n\nclass ArrayChecker<T> implements Checker<T[]> {\n  declare type: T[];\n\n  constructor(private checker: Checker<T>) {}\n\n  validate(obj: unknown): obj is T[] {\n    if (obj === null || obj === undefined) return false;\n    if (!Array.isArray(obj)) return false;\n\n    return obj.every((item) => this.checker.validate(item));\n  }\n\n  expected(): string {\n    return `Array<${this.checker.expected()}>`;\n  }\n}\n\nclass DictChecker<T> implements Checker<Dict<T>> {\n  declare type: Dict<T>;\n\n  constructor(private checker: Checker<T>) {}\n\n  validate(value: unknown): value is Dict<T> {\n    let isDict =\n      typeof value === 'object' && value !== null && Object.getPrototypeOf(value) === null;\n\n    if (!isDict) return false;\n\n    let { checker } = this;\n\n    for (let key in value as Dict) {\n      if (!checker.validate((value as Dict)[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  expected(): string {\n    return `a primitive`;\n  }\n}\n\nclass OpaqueChecker implements Checker<unknown> {\n  type: unknown;\n\n  validate(_obj: unknown): _obj is unknown {\n    return true;\n  }\n\n  expected(): string {\n    return `any`;\n  }\n}\n\nclass ObjectChecker implements Checker<unknown> {\n  declare type: object;\n\n  validate(obj: unknown): obj is object {\n    return typeof obj === 'function' || (typeof obj === 'object' && obj !== null);\n  }\n\n  expected(): string {\n    return `an object or function (valid WeakMap key)`;\n  }\n}\n\nexport interface SafeString {\n  toHTML(): string;\n}\n\nclass SafeStringChecker implements Checker<SafeString> {\n  declare type: SafeString;\n\n  validate(value: unknown): value is SafeString {\n    return (\n      typeof value === 'object' && value !== null && typeof (value as any).toHTML === 'function'\n    );\n  }\n\n  expected(): string {\n    return `SafeString`;\n  }\n}\n\nexport function CheckInstanceof<T>(Class: Constructor<T>): Checker<T> {\n  return new InstanceofChecker<T>(Class);\n}\n\nexport function CheckOption<T>(checker: Checker<T>): Checker<Nullable<T>> {\n  return new OptionChecker(checker, null);\n}\n\nexport function CheckMaybe<T>(checker: Checker<T>): Checker<Maybe<T>> {\n  return new MaybeChecker(checker);\n}\n\nexport function CheckInterface<\n  I extends { [P in keyof O]: O[P]['type'] },\n  O extends Dict<Checker<unknown>>\n>(obj: O): Checker<I> {\n  return new PropertyChecker(obj);\n}\n\nexport function CheckArray<T>(obj: Checker<T>): Checker<T[]> {\n  return new ArrayChecker(obj);\n}\n\nexport function CheckDict<T>(obj: Checker<T>): Checker<Dict<T>> {\n  return new DictChecker(obj);\n}\n\nfunction defaultMessage(value: unknown, expected: string): string {\n  return `Got ${value}, expected:\\n${expected}`;\n}\n\nexport function check<T>(\n  value: unknown,\n  checker: Checker<T>,\n  message?: (value: unknown, expected: string) => string\n): T;\nexport function check<T, U extends T>(value: T, checker: (value: T) => asserts value is U): U;\nexport function check<T>(\n  value: unknown,\n  checker: Checker<T> | ((value: unknown) => void),\n  message: (value: unknown, expected: string) => string = defaultMessage\n): T {\n  if (typeof checker === 'function') {\n    checker(value);\n    return value as T;\n  }\n  if (checker.validate(value)) {\n    return value;\n  } else {\n    throw new Error(message(value, checker.expected()));\n  }\n}\n\nlet size = 0;\n\nexport function recordStackSize(sp: number) {\n  size = sp;\n}\n\nexport function expectStackChange(stack: { sp: number }, expected: number, name: string) {\n  let actual = stack.sp - size;\n\n  if (actual === expected) return;\n\n  throw new Error(\n    `Expected stack to change by ${expected}, but it changed by ${actual} in ${name}`\n  );\n}\n\nexport const CheckPrimitive: Checker<Primitive> = new PrimitiveChecker();\nexport const CheckFunction: Checker<Function> = new TypeofChecker<Function>('function');\nexport const CheckNumber: Checker<number> = new TypeofChecker<number>('number');\nexport const CheckBoolean: Checker<boolean> = new TypeofChecker<boolean>('boolean');\nexport const CheckHandle: Checker<number> = CheckNumber;\nexport const CheckString: Checker<string> = new TypeofChecker<string>('string');\nexport const CheckNull: Checker<null> = new NullChecker();\nexport const CheckUnknown: Checker<unknown> = new OpaqueChecker();\nexport const CheckSafeString: Checker<SafeString> = new SafeStringChecker();\nexport const CheckObject: Checker<object> = new ObjectChecker();\n\nexport function CheckOr<T, U>(left: Checker<T>, right: Checker<U>): Checker<T | U> {\n  return new OrChecker(left, right);\n}\n\nexport function CheckValue<T>(value: T, desc = String(value)): Checker<T> {\n  return new ExactValueChecker(value, desc);\n}\n\nexport const CheckBlockSymbolTable: Checker<BlockSymbolTable> = CheckInterface({\n  parameters: CheckArray(CheckNumber),\n});\n\nexport const CheckProgramSymbolTable: Checker<ProgramSymbolTable> = CheckInterface({\n  hasEval: CheckBoolean,\n  symbols: CheckArray(CheckString),\n});\n\nexport const CheckElement: Checker<SimpleElement> = CheckInterface({\n  nodeType: CheckValue(1),\n  tagName: CheckString,\n  nextSibling: CheckUnknown,\n});\n\nexport const CheckDocumentFragment: Checker<SimpleDocumentFragment> = CheckInterface({\n  nodeType: CheckValue(11),\n  nextSibling: CheckUnknown,\n});\n\nexport const CheckNode: Checker<SimpleNode> = CheckInterface({\n  nodeType: CheckNumber,\n  nextSibling: CheckUnknown,\n});\n"],"names":["LOCAL_SHOULD_LOG","window","location","test","search","fillNulls","count","arr","Array","i","opcodeMetadata","op","isMachine","MACHINE_METADATA","METADATA","Op","Size","MachineOp","debugSlice","context","start","end","LOCAL_LOGGER","group","heap","program","opcode","createOp","_size","offset","name","params","debug","constants","log","logOpcode","size","groupEnd","type","out","args","Object","keys","map","p","param","string","JSON","stringify","e","undefined","parse","GlimmerDebug","json","join","c","metadata","Error","create","index","operand","enumerate","ops","actualOperand","opcodeOperand","getValue","getArray","decodePrimitive","decodeRegister","op1","op2","op3","register","$pc","$ra","$fp","$sp","$s0","$s1","$t0","$t1","$v0","primitive","decodeHandle","decodeImmediate","PushFrame","mnemonic","before","stackChange","operands","check","PopFrame","InvokeVirtual","InvokeStatic","Jump","Return","ReturnTo","Helper","DynamicHelper","SetNamedVariables","SetBlocks","SetVariable","SetBlock","GetVariable","GetProperty","GetBlock","SpreadBlock","HasBlock","HasBlockParams","Concat","IfInline","Not","Constant","ConstantReference","Primitive","PrimitiveReference","ReifyU32","Dup","Pop","Load","Fetch","RootScope","VirtualRootScope","ChildScope","PopScope","Text","Comment","AppendHTML","AppendSafeHTML","AppendDocumentFragment","AppendNode","AppendText","OpenElement","OpenDynamicElement","PushRemoteElement","StaticAttr","DynamicAttr","ComponentAttr","FlushElement","CloseElement","PopRemoteElement","Modifier","BindDynamicScope","PushDynamicScope","PopDynamicScope","CompileBlock","PushBlockScope","PushSymbolTable","InvokeYield","JumpIf","JumpUnless","JumpEq","AssertSame","Enter","Exit","ToBoolean","EnterList","ExitList","Iterate","Main","ContentType","DynamicContentType","Curry","PushComponentDefinition","PushDynamicComponentInstance","ResolveDynamicComponent","PushArgs","PushEmptyArgs","PopArgs","PrepareArgs","CaptureArgs","CreateComponent","RegisterComponentDestructor","PutComponentOperations","GetComponentSelf","GetComponentTagName","GetComponentLayout","BindEvalScope","SetupForEval","PopulateLayout","InvokeComponentLayout","BeginComponentTransaction","CommitComponentTransaction","DidCreateElement","DidRenderLayout","ResolveMaybeLocal","Debugger","OPERAND_TYPES","normalize","key","input","format","isArray","slice","length","skip","stack","after","hasRest","some","s","split","indexOf","normalizeAll","parsed","machine","normalizeParsed","syscall","value","entries","buildEnum","max","last","values","forEach","push","predicate","enumString","strip","strings","_len","arguments","_key","String","exec","min","line","leading","Math","stripped","META_KIND","buildSingleMeta","kind","all","o","pad","v","repeat","buildMetas","wrap","checker","validate","expected","TypeofChecker","constructor","expectedType","this","InstanceofChecker","Class","OptionChecker","emptyValue","MaybeChecker","OrChecker","left","right","ExactValueChecker","desc","obj","PropertyChecker","checkers","every","_ref","k","_ref2","ArrayChecker","item","DictChecker","getPrototypeOf","CheckInstanceof","CheckOption","CheckMaybe","CheckInterface","CheckArray","CheckDict","defaultMessage","message","recordStackSize","sp","expectStackChange","actual","CheckPrimitive","CheckFunction","CheckNumber","CheckBoolean","CheckHandle","CheckString","CheckNull","CheckUnknown","_obj","CheckSafeString","toHTML","CheckObject","CheckOr","CheckValue","CheckBlockSymbolTable","parameters","CheckProgramSymbolTable","hasEval","symbols","CheckElement","nodeType","tagName","nextSibling","CheckDocumentFragment","CheckNode"],"mappings":"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"}