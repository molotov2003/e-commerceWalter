{"version":3,"file":"constraints.js","sources":["../src/constraints.js"],"sourcesContent":["/* eslint-disable no-console */\r\n\r\nimport { A } from '@ember/array';\r\n\r\nimport { guidFor } from '@ember/object/internals';\r\nimport { constraintKeys, EMPTY, ANY } from './constraint';\r\nimport constrainables from './constrainables';\r\n\r\nexport default class Constraints {\r\n  constructor() {\r\n    this.targets = {};\r\n    this.ruleCounter = 0;\r\n    for (let i = 0; i < constrainableKeys.length; i++) {\r\n      this.targets[constrainableKeys[i]] = {};\r\n    }\r\n  }\r\n\r\n  addRule(rule) {\r\n    rule.id = this.ruleCounter++;\r\n    if (rule.debug) {\r\n      this.debug = true;\r\n    }\r\n    this.addHalfRule(rule);\r\n    if (rule.reverse) {\r\n      const inverted = rule.invert();\r\n      inverted.id = rule.id + ' reverse';\r\n      this.addHalfRule(inverted);\r\n    }\r\n  }\r\n\r\n  addHalfRule(rule) {\r\n    const seen = {};\r\n    rule.constraints.forEach((constraint) => {\r\n      seen[constraint.target] = true;\r\n      this.addConstraint(rule, constraint);\r\n    });\r\n    constrainableKeys.forEach((key) => {\r\n      if (!seen[key]) {\r\n        this.addConstraint(rule, { target: key });\r\n      }\r\n    });\r\n  }\r\n\r\n  addConstraint(rule, constraint) {\r\n    const context = this.targets[constraint.target];\r\n    if (!context) {\r\n      throw new Error(`Unknown constraint target ${constraint.target}`);\r\n    }\r\n    if (constraint.keys) {\r\n      constraint.keys.forEach((key) => {\r\n        this.addKey(context, key, rule);\r\n      });\r\n    } else {\r\n      this.addKey(context, ANY, rule);\r\n    }\r\n  }\r\n\r\n  addKey(context, key, rule) {\r\n    if (!context[key]) {\r\n      context[key] = {};\r\n    }\r\n    context[key][guidFor(rule)] = rule;\r\n  }\r\n\r\n  bestMatch(conditions) {\r\n    if (this.debug) {\r\n      console.log(\r\n        '[liquid-fire] Checking transition rules for',\r\n        conditions.parentElement,\r\n      );\r\n    }\r\n\r\n    const rules = this.match(conditions);\r\n    const best = highestPriority(rules);\r\n\r\n    if (rules.length > 1 && this.debug) {\r\n      rules.forEach((rule) => {\r\n        if (rule !== best && rule.debug) {\r\n          console.log(\r\n            `${describeRule(\r\n              rule,\r\n            )} matched, but it was superceded by another rule`,\r\n          );\r\n        }\r\n      });\r\n    }\r\n    if (best && best.debug) {\r\n      console.log(`${describeRule(best)} matched`);\r\n    }\r\n    return best;\r\n  }\r\n\r\n  match(conditions) {\r\n    let rules = this.matchByKeys(conditions);\r\n    rules = this.matchPredicates(conditions, rules);\r\n    return rules;\r\n  }\r\n\r\n  matchByKeys(conditions) {\r\n    const matchSets = [];\r\n    for (let i = 0; i < constrainableKeys.length; i++) {\r\n      const key = constrainableKeys[i];\r\n      const value = conditionAccessor(conditions, key);\r\n      matchSets.push(this.matchingSet(key, value));\r\n    }\r\n    return intersection(matchSets);\r\n  }\r\n\r\n  matchingSet(prop, value) {\r\n    const keys = constraintKeys(value);\r\n    const context = this.targets[prop];\r\n    let matched = A();\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (context[keys[i]]) {\r\n        matched.push(context[keys[i]]);\r\n      }\r\n    }\r\n    if (keys.length === 0 && context[EMPTY]) {\r\n      matched.push(context[EMPTY]);\r\n    }\r\n    if (context[ANY]) {\r\n      matched.push(context[ANY]);\r\n    }\r\n    matched = union(matched);\r\n    if (this.debug) {\r\n      this.logDebugRules(matched, context, prop, value);\r\n    }\r\n    return matched;\r\n  }\r\n\r\n  logDebugRules(matched, context, target, value) {\r\n    A(Object.keys(context)).forEach((setKey) => {\r\n      const set = context[setKey];\r\n      A(Object.keys(set)).forEach((ruleKey) => {\r\n        const rule = set[ruleKey];\r\n        if (rule.debug && !matched[guidFor(rule)]) {\r\n          console.log(\r\n            `${describeRule(rule)} rejected because ${target} was`,\r\n            ...value,\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  matchPredicates(conditions, rules) {\r\n    const output = [];\r\n    for (let i = 0; i < rules.length; i++) {\r\n      const rule = rules[i];\r\n      let matched = true;\r\n      for (let j = 0; j < rule.constraints.length; j++) {\r\n        const constraint = rule.constraints[j];\r\n        if (\r\n          constraint.predicate &&\r\n          !this.matchConstraintPredicate(conditions, rule, constraint)\r\n        ) {\r\n          matched = false;\r\n          break;\r\n        }\r\n      }\r\n      if (matched) {\r\n        output.push(rule);\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n\r\n  matchConstraintPredicate(conditions, rule, constraint) {\r\n    let values = conditionAccessor(conditions, constraint.target);\r\n    const reverse = constrainables[constraint.target].reversesTo;\r\n    let inverseValues;\r\n    if (reverse) {\r\n      inverseValues = conditionAccessor(conditions, reverse);\r\n    }\r\n    for (let i = 0; i < values.length; i++) {\r\n      if (\r\n        constraint.predicate(values[i], inverseValues ? inverseValues[i] : null)\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    if (rule.debug) {\r\n      if (constraint.target === 'parentElement') {\r\n        values = values.map((v) => v[0]);\r\n      }\r\n      console.log(\r\n        `${describeRule(rule)} rejected because of a constraint on ${\r\n          constraint.target\r\n        }. ${constraint.target} was`,\r\n        ...values,\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction conditionAccessor(conditions, key) {\r\n  const constrainable = constrainables[key];\r\n  if (constrainable.accessor) {\r\n    return constrainable.accessor(conditions) || [];\r\n  } else {\r\n    return [conditions[key]];\r\n  }\r\n}\r\n\r\n// Returns a list of property values from source whose keys also\r\n// appear in all of the rest objects.\r\nfunction intersection(sets) {\r\n  const source = sets[0];\r\n  const rest = sets.slice(1);\r\n  const keys = Object.keys(source);\r\n  const keysLength = keys.length;\r\n  const restLength = rest.length;\r\n  const result = [];\r\n  for (let keyIndex = 0; keyIndex < keysLength; keyIndex++) {\r\n    const key = keys[keyIndex];\r\n    let matched = true;\r\n    for (let restIndex = 0; restIndex < restLength; restIndex++) {\r\n      if (!Object.hasOwnProperty.call(rest[restIndex], key)) {\r\n        matched = false;\r\n        break;\r\n      }\r\n    }\r\n    if (matched) {\r\n      result.push(source[key]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction union(sets) {\r\n  const setsLength = sets.length;\r\n  const output = {};\r\n  for (let i = 0; i < setsLength; i++) {\r\n    const set = sets[i];\r\n    const keys = Object.keys(set);\r\n    for (let j = 0; j < keys.length; j++) {\r\n      const key = keys[j];\r\n      output[key] = set[key];\r\n    }\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction describeRule(rule) {\r\n  return `[liquid-fire rule ${rule.id}]`;\r\n}\r\n\r\nfunction highestPriority(rules) {\r\n  let best;\r\n  let bestScore = 0;\r\n  for (let i = 0; i < rules.length; i++) {\r\n    const rule = rules[i];\r\n    const score = rules[i].constraints.length;\r\n    if (\r\n      !best ||\r\n      score > bestScore ||\r\n      (score === bestScore && rule.id > best.id)\r\n    ) {\r\n      best = rule;\r\n      bestScore = score;\r\n    }\r\n  }\r\n  return best;\r\n}\r\n\r\nconst constrainableKeys = A(Object.keys(constrainables));\r\n"],"names":["Constraints","constructor","targets","ruleCounter","i","constrainableKeys","length","addRule","rule","id","debug","addHalfRule","reverse","inverted","invert","seen","constraints","forEach","constraint","target","addConstraint","key","context","Error","keys","addKey","ANY","guidFor","bestMatch","conditions","console","log","parentElement","rules","match","best","highestPriority","describeRule","matchByKeys","matchPredicates","matchSets","value","conditionAccessor","push","matchingSet","intersection","prop","constraintKeys","matched","A","EMPTY","union","logDebugRules","Object","setKey","set","ruleKey","output","j","predicate","matchConstraintPredicate","values","constrainables","reversesTo","inverseValues","map","v","constrainable","accessor","sets","source","rest","slice","keysLength","restLength","result","keyIndex","restIndex","hasOwnProperty","call","setsLength","bestScore","score"],"mappings":"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"}