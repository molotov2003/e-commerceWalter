{"version":3,"file":"move-over.js","sources":["../../src/transitions/move-over.js"],"sourcesContent":["import { stop, animate, Promise, isAnimating, finish } from '../index';\r\n\r\nexport default function moveOver(dimension, direction, opts) {\r\n  const oldParams = {},\r\n    newParams = {};\r\n  let firstStep, property, measure;\r\n\r\n  if (dimension.toLowerCase() === 'x') {\r\n    property = 'translateX';\r\n    measure = 'width';\r\n  } else {\r\n    property = 'translateY';\r\n    measure = 'height';\r\n  }\r\n\r\n  if (isAnimating(this.oldElement, 'moving-in')) {\r\n    firstStep = finish(this.oldElement, 'moving-in');\r\n  } else {\r\n    stop(this.oldElement);\r\n    firstStep = Promise.resolve();\r\n  }\r\n\r\n  return firstStep.then(() => {\r\n    const bigger = biggestSize(this, measure);\r\n    oldParams[property] = bigger * direction + 'px';\r\n    newParams[property] = ['0px', -1 * bigger * direction + 'px'];\r\n\r\n    return Promise.all([\r\n      animate(this.oldElement, oldParams, opts),\r\n      animate(this.newElement, newParams, opts, 'moving-in'),\r\n    ]);\r\n  });\r\n}\r\n\r\nfunction biggestSize(context, dimension) {\r\n  const sizes = [];\r\n  if (context.newElement) {\r\n    sizes.push(parseInt(getComputedStyle(context.newElement)[dimension], 10));\r\n    sizes.push(\r\n      parseInt(\r\n        getComputedStyle(context.newElement.parentElement)[dimension],\r\n        10,\r\n      ),\r\n    );\r\n  }\r\n  if (context.oldElement) {\r\n    sizes.push(parseInt(getComputedStyle(context.oldElement)[dimension], 10));\r\n    sizes.push(\r\n      parseInt(\r\n        getComputedStyle(context.oldElement.parentElement)[dimension],\r\n        10,\r\n      ),\r\n    );\r\n  }\r\n  return Math.max.apply(null, sizes);\r\n}\r\n"],"names":["moveOver","dimension","direction","opts","oldParams","newParams","firstStep","property","measure","toLowerCase","isAnimating","oldElement","finish","stop","Promise","resolve","then","bigger","biggestSize","all","animate","newElement","context","sizes","push","parseInt","getComputedStyle","parentElement","Math","max","apply"],"mappings":";;;;;;;;;;;;AAEe,SAASA,QAAQA,CAACC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAE;EAC3D,MAAMC,SAAS,GAAG,EAAE;IAClBC,SAAS,GAAG,EAAE,CAAA;AAChB,EAAA,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,CAAA;AAEhC,EAAA,IAAIP,SAAS,CAACQ,WAAW,EAAE,KAAK,GAAG,EAAE;AACnCF,IAAAA,QAAQ,GAAG,YAAY,CAAA;AACvBC,IAAAA,OAAO,GAAG,OAAO,CAAA;AACnB,GAAC,MAAM;AACLD,IAAAA,QAAQ,GAAG,YAAY,CAAA;AACvBC,IAAAA,OAAO,GAAG,QAAQ,CAAA;AACpB,GAAA;EAEA,IAAIE,WAAW,CAAC,IAAI,CAACC,UAAU,EAAE,WAAW,CAAC,EAAE;IAC7CL,SAAS,GAAGM,MAAM,CAAC,IAAI,CAACD,UAAU,EAAE,WAAW,CAAC,CAAA;AAClD,GAAC,MAAM;AACLE,IAAAA,IAAI,CAAC,IAAI,CAACF,UAAU,CAAC,CAAA;AACrBL,IAAAA,SAAS,GAAGQ,SAAO,CAACC,OAAO,EAAE,CAAA;AAC/B,GAAA;AAEA,EAAA,OAAOT,SAAS,CAACU,IAAI,CAAC,MAAM;AAC1B,IAAA,MAAMC,MAAM,GAAGC,WAAW,CAAC,IAAI,EAAEV,OAAO,CAAC,CAAA;IACzCJ,SAAS,CAACG,QAAQ,CAAC,GAAGU,MAAM,GAAGf,SAAS,GAAG,IAAI,CAAA;AAC/CG,IAAAA,SAAS,CAACE,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAGU,MAAM,GAAGf,SAAS,GAAG,IAAI,CAAC,CAAA;AAE7D,IAAA,OAAOY,SAAO,CAACK,GAAG,CAAC,CACjBC,OAAO,CAAC,IAAI,CAACT,UAAU,EAAEP,SAAS,EAAED,IAAI,CAAC,EACzCiB,OAAO,CAAC,IAAI,CAACC,UAAU,EAAEhB,SAAS,EAAEF,IAAI,EAAE,WAAW,CAAC,CACvD,CAAC,CAAA;AACJ,GAAC,CAAC,CAAA;AACJ,CAAA;AAEA,SAASe,WAAWA,CAACI,OAAO,EAAErB,SAAS,EAAE;EACvC,MAAMsB,KAAK,GAAG,EAAE,CAAA;EAChB,IAAID,OAAO,CAACD,UAAU,EAAE;AACtBE,IAAAA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAACJ,OAAO,CAACD,UAAU,CAAC,CAACpB,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;AACzEsB,IAAAA,KAAK,CAACC,IAAI,CACRC,QAAQ,CACNC,gBAAgB,CAACJ,OAAO,CAACD,UAAU,CAACM,aAAa,CAAC,CAAC1B,SAAS,CAAC,EAC7D,EACF,CACF,CAAC,CAAA;AACH,GAAA;EACA,IAAIqB,OAAO,CAACX,UAAU,EAAE;AACtBY,IAAAA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAACJ,OAAO,CAACX,UAAU,CAAC,CAACV,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;AACzEsB,IAAAA,KAAK,CAACC,IAAI,CACRC,QAAQ,CACNC,gBAAgB,CAACJ,OAAO,CAACX,UAAU,CAACgB,aAAa,CAAC,CAAC1B,SAAS,CAAC,EAC7D,EACF,CACF,CAAC,CAAA;AACH,GAAA;EACA,OAAO2B,IAAI,CAACC,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEP,KAAK,CAAC,CAAA;AACpC;;;;"}