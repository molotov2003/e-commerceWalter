import { a as _applyDecoratedDescriptor, b as _initializerDefineProperty, _ as _defineProperty } from '../_rollupPluginBabelHelpers-241f4bb8.js';
import { setComponentTemplate } from '@ember/component';
import { precompileTemplate } from '@ember/template-compilation';
import Component from '@glimmer/component';
import { action } from '@ember/object';
import { defer } from 'rsvp';
import { inject } from '@ember/service';
import './liquid-sync.css';

var TEMPLATE = precompileTemplate("{{yield (action \"ready\")~}}\r\n<div class=\"liquid-sync\"\r\n	{{did-insert this.setup}}\r\n	{{will-destroy this.destroyElement}}\r\n></div>");

var _dec, _class, _descriptor, _descriptor2;
let LiquidSyncComponent = (_dec = inject('liquid-fire-transitions'), (_class = class LiquidSyncComponent extends Component {
  constructor(...args) {
    super(...args);
    _initializerDefineProperty(this, "liquidFireChildren", _descriptor, this);
    _initializerDefineProperty(this, "_transitionMap", _descriptor2, this);
    _defineProperty(this, "_lfDefer", []);
  }
  setup(element) {
    this.element = element;
    this.pauseLiquidFire();
  }
  destroyElement() {
    this.ready();
  }
  ready() {
    this.resumeLiquidFire();
  }
  pauseLiquidFire() {
    const context = this.liquidFireChildren.closest(this.element);
    if (context) {
      const def = new defer();
      const tmap = this._transitionMap;
      tmap.incrementRunningTransitions();
      def.promise.finally(() => tmap.decrementRunningTransitions());
      this._lfDefer.push(def);
      context._waitForMe(def.promise);
    }
  }
  resumeLiquidFire() {
    const def = this._lfDefer.pop();
    if (def) {
      def.resolve();
    }
  }
}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, "liquidFireChildren", [inject], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "_transitionMap", [_dec], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class.prototype, "setup", [action], Object.getOwnPropertyDescriptor(_class.prototype, "setup"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "destroyElement", [action], Object.getOwnPropertyDescriptor(_class.prototype, "destroyElement"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "ready", [action], Object.getOwnPropertyDescriptor(_class.prototype, "ready"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, "resumeLiquidFire", [action], Object.getOwnPropertyDescriptor(_class.prototype, "resumeLiquidFire"), _class.prototype)), _class));
setComponentTemplate(TEMPLATE, LiquidSyncComponent);

export { LiquidSyncComponent as default };
//# sourceMappingURL=liquid-sync.js.map
