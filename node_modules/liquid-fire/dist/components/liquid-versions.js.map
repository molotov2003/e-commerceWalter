{"version":3,"file":"liquid-versions.js","sources":["../../src/components/liquid-versions.hbs.js","../../src/components/liquid-versions.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{#each this.versions as |version|~}}\\r\\n  {{#if (lf-or @renderWhenFalse version.value)~}}\\r\\n    <LiquidChild\\r\\n      @version={{version}}\\r\\n      @uniqueChildId={{version.uniqueChildId}}\\r\\n      @liquidChildDidRender={{this.childDidRender}}\\r\\n      class={{@class}}\\r\\n    >\\r\\n      {{~yield version.value~}}\\r\\n    </LiquidChild>\\r\\n  {{~/if}}\\r\\n{{~/each~}}\\r\\n<div class=\\\"liquid-versions\\\"\\r\\n  {{did-insert this.appendVersion}}\\r\\n  {{did-update this.appendVersion @value @use @rules @matchContext @versionEquality @renderWhenFalse @class @notify}}\\r\\n></div>\")","import Component from '@glimmer/component';\r\nimport { action, set } from '@ember/object';\r\nimport { assert } from '@ember/debug';\r\nimport { tracked } from '@glimmer/tracking';\r\nimport { A } from '@ember/array';\r\nimport { inject as service } from '@ember/service';\r\nimport { guidFor } from '@ember/object/internals';\r\nimport './liquid-versions.css';\r\n\r\nexport default class LiquidVersionsComponent extends Component {\r\n  @service('liquid-fire-transitions') transitionMap;\r\n\r\n  @tracked versions = null;\r\n\r\n  @action\r\n  appendVersion() {\r\n    let versions = this.versions;\r\n    let firstTime = false;\r\n    const newValue = this.args.value;\r\n    let oldValue;\r\n    const versionEquality = this.args.versionEquality || defaultEqualityCheck;\r\n\r\n    if (!versions) {\r\n      firstTime = true;\r\n      versions = A();\r\n      this.uniqueChildId = guidFor(this);\r\n    } else {\r\n      if (versions[0]) {\r\n        oldValue = versions[0].value;\r\n      }\r\n    }\r\n\r\n    if (!firstTime && versionEquality(oldValue, newValue)) {\r\n      if (versions[0] && versionEquality !== defaultEqualityCheck) {\r\n        // When using custom equality checkers, we may consider values\r\n        // equal for our purposes that are not `===`. In that case, we\r\n        // still need to thread updated values through to our children\r\n        // so they have their own opportunity to react.\r\n        set(versions[0], 'value', newValue);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.notifyContainer('willTransition', versions);\r\n    const newVersion = {\r\n      value: newValue,\r\n      uniqueChildId: this.uniqueChildId,\r\n    };\r\n    versions.unshiftObject(newVersion);\r\n\r\n    this.firstTime = firstTime;\r\n    if (firstTime) {\r\n      set(this, 'versions', versions);\r\n    }\r\n\r\n    if (!(newValue || this.args.renderWhenFalse || firstTime)) {\r\n      this._transition();\r\n    }\r\n  }\r\n\r\n  _transition() {\r\n    assert(\r\n      `LiquidVersions: @containerElement is required!`,\r\n      !!this.args.containerElement,\r\n    );\r\n\r\n    const versions = this.versions;\r\n    const firstTime = this.firstTime;\r\n    this.firstTime = false;\r\n\r\n    this.notifyContainer('afterChildInsertion', versions);\r\n\r\n    const transition = this.transitionMap.transitionFor({\r\n      versions: versions,\r\n      parentElement: this.args.containerElement,\r\n      use: this.args.use,\r\n      rules: this.args.rules,\r\n      matchContext: this.args.matchContext || {},\r\n      // Using strings instead of booleans here is an\r\n      // optimization. The constraint system can match them more\r\n      // efficiently, since it treats boolean constraints as generic\r\n      // \"match anything truthy/falsy\" predicates, whereas string\r\n      // checks are a direct object property lookup.\r\n      firstTime: firstTime ? 'yes' : 'no',\r\n    });\r\n\r\n    if (this._runningTransition) {\r\n      this._runningTransition.interrupt();\r\n    }\r\n    this._runningTransition = transition;\r\n\r\n    transition.run().then(\r\n      (wasInterrupted) => {\r\n        // if we were interrupted, we don't handle the cleanup because\r\n        // another transition has already taken over.\r\n        if (!wasInterrupted) {\r\n          this.finalizeVersions(versions);\r\n          this.notifyContainer('afterTransition', versions);\r\n        }\r\n      },\r\n      (err) => {\r\n        this.finalizeVersions(versions);\r\n        this.notifyContainer('afterTransition', versions);\r\n        throw err;\r\n      },\r\n    );\r\n  }\r\n\r\n  finalizeVersions(versions) {\r\n    versions.replace(1, versions.length - 1);\r\n  }\r\n\r\n  notifyContainer(method, versions) {\r\n    const target = this.args.notify;\r\n    if (target && !target.isDestroying) {\r\n      target[method](versions);\r\n    }\r\n  }\r\n\r\n  @action\r\n  childDidRender(child) {\r\n    const version = child.args.version;\r\n    set(version, 'view', child);\r\n    this._transition();\r\n  }\r\n}\r\n\r\n// All falsey values are considered equal, everything else gets strict\r\n// equality.\r\nfunction defaultEqualityCheck(a, b) {\r\n  return (!a && !b) || a === b;\r\n}\r\n"],"names":["precompileTemplate","LiquidVersionsComponent","_dec","service","_class","Component","constructor","args","_initializerDefineProperty","_descriptor","_descriptor2","appendVersion","versions","firstTime","newValue","value","oldValue","versionEquality","defaultEqualityCheck","A","uniqueChildId","guidFor","set","notifyContainer","newVersion","unshiftObject","renderWhenFalse","_transition","assert","containerElement","transition","transitionMap","transitionFor","parentElement","use","rules","matchContext","_runningTransition","interrupt","run","then","wasInterrupted","finalizeVersions","err","replace","length","method","target","notify","isDestroying","childDidRender","child","version","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","tracked","action","Object","getOwnPropertyDescriptor","a","b","setComponentTemplate","TEMPLATE"],"mappings":";;;;;;;;;;;;AACA,eAAeA,kBAAkB,CAAC,6jBAA6jB,CAAC;;;ACMjkB,IAEVC,uBAAuB,IAAAC,IAAA,GACzCC,MAAO,CAAC,yBAAyB,CAAC,GAAAC,MAAA,GADtB,MAAMH,uBAAuB,SAASI,SAAS,CAAC;AAAAC,EAAAA,WAAAA,CAAA,GAAAC,IAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAAA,IAAA,CAAA,CAAA;AAAAC,IAAAA,0BAAA,wBAAAC,WAAA,EAAA,IAAA,CAAA,CAAA;AAAAD,IAAAA,0BAAA,mBAAAE,YAAA,EAAA,IAAA,CAAA,CAAA;AAAA,GAAA;AAM7DC,EAAAA,aAAaA,GAAG;AACd,IAAA,IAAIC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAA;IAC5B,IAAIC,SAAS,GAAG,KAAK,CAAA;AACrB,IAAA,MAAMC,QAAQ,GAAG,IAAI,CAACP,IAAI,CAACQ,KAAK,CAAA;AAChC,IAAA,IAAIC,QAAQ,CAAA;IACZ,MAAMC,eAAe,GAAG,IAAI,CAACV,IAAI,CAACU,eAAe,IAAIC,oBAAoB,CAAA;IAEzE,IAAI,CAACN,QAAQ,EAAE;AACbC,MAAAA,SAAS,GAAG,IAAI,CAAA;MAChBD,QAAQ,GAAGO,CAAC,EAAE,CAAA;AACd,MAAA,IAAI,CAACC,aAAa,GAAGC,OAAO,CAAC,IAAI,CAAC,CAAA;AACpC,KAAC,MAAM;AACL,MAAA,IAAIT,QAAQ,CAAC,CAAC,CAAC,EAAE;AACfI,QAAAA,QAAQ,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAACG,KAAK,CAAA;AAC9B,OAAA;AACF,KAAA;IAEA,IAAI,CAACF,SAAS,IAAII,eAAe,CAACD,QAAQ,EAAEF,QAAQ,CAAC,EAAE;MACrD,IAAIF,QAAQ,CAAC,CAAC,CAAC,IAAIK,eAAe,KAAKC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;QACAI,GAAG,CAACV,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,EAAEE,QAAQ,CAAC,CAAA;AACrC,OAAA;AACA,MAAA,OAAA;AACF,KAAA;AAEA,IAAA,IAAI,CAACS,eAAe,CAAC,gBAAgB,EAAEX,QAAQ,CAAC,CAAA;AAChD,IAAA,MAAMY,UAAU,GAAG;AACjBT,MAAAA,KAAK,EAAED,QAAQ;MACfM,aAAa,EAAE,IAAI,CAACA,aAAAA;KACrB,CAAA;AACDR,IAAAA,QAAQ,CAACa,aAAa,CAACD,UAAU,CAAC,CAAA;IAElC,IAAI,CAACX,SAAS,GAAGA,SAAS,CAAA;AAC1B,IAAA,IAAIA,SAAS,EAAE;AACbS,MAAAA,GAAG,CAAC,IAAI,EAAE,UAAU,EAAEV,QAAQ,CAAC,CAAA;AACjC,KAAA;IAEA,IAAI,EAAEE,QAAQ,IAAI,IAAI,CAACP,IAAI,CAACmB,eAAe,IAAIb,SAAS,CAAC,EAAE;MACzD,IAAI,CAACc,WAAW,EAAE,CAAA;AACpB,KAAA;AACF,GAAA;AAEAA,EAAAA,WAAWA,GAAG;IACZC,MAAM,CACH,CAA+C,8CAAA,CAAA,EAChD,CAAC,CAAC,IAAI,CAACrB,IAAI,CAACsB,gBACd,CAAC,CAAA;AAED,IAAA,MAAMjB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAA;AAC9B,IAAA,MAAMC,SAAS,GAAG,IAAI,CAACA,SAAS,CAAA;IAChC,IAAI,CAACA,SAAS,GAAG,KAAK,CAAA;AAEtB,IAAA,IAAI,CAACU,eAAe,CAAC,qBAAqB,EAAEX,QAAQ,CAAC,CAAA;AAErD,IAAA,MAAMkB,UAAU,GAAG,IAAI,CAACC,aAAa,CAACC,aAAa,CAAC;AAClDpB,MAAAA,QAAQ,EAAEA,QAAQ;AAClBqB,MAAAA,aAAa,EAAE,IAAI,CAAC1B,IAAI,CAACsB,gBAAgB;AACzCK,MAAAA,GAAG,EAAE,IAAI,CAAC3B,IAAI,CAAC2B,GAAG;AAClBC,MAAAA,KAAK,EAAE,IAAI,CAAC5B,IAAI,CAAC4B,KAAK;MACtBC,YAAY,EAAE,IAAI,CAAC7B,IAAI,CAAC6B,YAAY,IAAI,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACAvB,MAAAA,SAAS,EAAEA,SAAS,GAAG,KAAK,GAAG,IAAA;AACjC,KAAC,CAAC,CAAA;IAEF,IAAI,IAAI,CAACwB,kBAAkB,EAAE;AAC3B,MAAA,IAAI,CAACA,kBAAkB,CAACC,SAAS,EAAE,CAAA;AACrC,KAAA;IACA,IAAI,CAACD,kBAAkB,GAAGP,UAAU,CAAA;IAEpCA,UAAU,CAACS,GAAG,EAAE,CAACC,IAAI,CAClBC,cAAc,IAAK;AAClB;AACA;MACA,IAAI,CAACA,cAAc,EAAE;AACnB,QAAA,IAAI,CAACC,gBAAgB,CAAC9B,QAAQ,CAAC,CAAA;AAC/B,QAAA,IAAI,CAACW,eAAe,CAAC,iBAAiB,EAAEX,QAAQ,CAAC,CAAA;AACnD,OAAA;KACD,EACA+B,GAAG,IAAK;AACP,MAAA,IAAI,CAACD,gBAAgB,CAAC9B,QAAQ,CAAC,CAAA;AAC/B,MAAA,IAAI,CAACW,eAAe,CAAC,iBAAiB,EAAEX,QAAQ,CAAC,CAAA;AACjD,MAAA,MAAM+B,GAAG,CAAA;AACX,KACF,CAAC,CAAA;AACH,GAAA;EAEAD,gBAAgBA,CAAC9B,QAAQ,EAAE;IACzBA,QAAQ,CAACgC,OAAO,CAAC,CAAC,EAAEhC,QAAQ,CAACiC,MAAM,GAAG,CAAC,CAAC,CAAA;AAC1C,GAAA;AAEAtB,EAAAA,eAAeA,CAACuB,MAAM,EAAElC,QAAQ,EAAE;AAChC,IAAA,MAAMmC,MAAM,GAAG,IAAI,CAACxC,IAAI,CAACyC,MAAM,CAAA;AAC/B,IAAA,IAAID,MAAM,IAAI,CAACA,MAAM,CAACE,YAAY,EAAE;AAClCF,MAAAA,MAAM,CAACD,MAAM,CAAC,CAAClC,QAAQ,CAAC,CAAA;AAC1B,KAAA;AACF,GAAA;EAGAsC,cAAcA,CAACC,KAAK,EAAE;AACpB,IAAA,MAAMC,OAAO,GAAGD,KAAK,CAAC5C,IAAI,CAAC6C,OAAO,CAAA;AAClC9B,IAAAA,GAAG,CAAC8B,OAAO,EAAE,MAAM,EAAED,KAAK,CAAC,CAAA;IAC3B,IAAI,CAACxB,WAAW,EAAE,CAAA;AACpB,GAAA;AACF,CAAC,GAAAlB,WAAA,GAAA4C,yBAAA,CAAAjD,MAAA,CAAAkD,SAAA,EAAA,eAAA,EAAA,CAAApD,IAAA,CAAA,EAAA;EAAAqD,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;EAAAC,WAAA,EAAA,IAAA;AAAA,CAAAhD,CAAAA,EAAAA,YAAA,GAAA2C,yBAAA,CAAAjD,MAAA,CAAAkD,SAAA,eAjHEK,OAAO,CAAA,EAAA;EAAAJ,YAAA,EAAA,IAAA;EAAAC,UAAA,EAAA,IAAA;EAAAC,QAAA,EAAA,IAAA;AAAAC,EAAAA,WAAA,cAAA;AAAA,IAAA,OAAY,IAAI,CAAA;AAAA,GAAA;AAAA,CAAA,CAAA,EAAAL,yBAAA,CAAAjD,MAAA,CAAAkD,SAAA,EAAA,eAAA,EAAA,CAEvBM,MAAM,CAAAC,EAAAA,MAAA,CAAAC,wBAAA,CAAA1D,MAAA,CAAAkD,SAAA,EAAAlD,eAAAA,CAAAA,EAAAA,MAAA,CAAAkD,SAAA,CAAA,EAAAD,yBAAA,CAAAjD,MAAA,CAAAkD,SAAA,qBAyGNM,MAAM,CAAA,EAAAC,MAAA,CAAAC,wBAAA,CAAA1D,MAAA,CAAAkD,SAAA,EAAA,gBAAA,CAAA,EAAAlD,MAAA,CAAAkD,SAAA,IAAAlD,MAAA,CAAA,EAAA;AAST;AACA,SAASc,oBAAoBA,CAAC6C,CAAC,EAAEC,CAAC,EAAE;EAClC,OAAQ,CAACD,CAAC,IAAI,CAACC,CAAC,IAAKD,CAAC,KAAKC,CAAC,CAAA;AAC9B,CAAA;AAACC,oBAAA,CAAAC,QAAA,EAAAjE,uBAAA,CAAA;;;;"}