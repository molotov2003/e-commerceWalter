{"version":3,"file":"liquid-if.js","sources":["../../src/components/liquid-if.hbs.js","../../src/components/liquid-if.js"],"sourcesContent":["import { precompileTemplate } from \"@ember/template-compilation\";\nexport default precompileTemplate(\"{{#if @containerless}}\\r\\n  {{! Why are we using inline-ifs here? Because we want to force\\r\\n    conversion to a boolean while respecting Ember\\'s built in `if`\\r\\n    semantics.\\r\\n\\r\\n    Why not just defer the conversion until the real block `if` below?\\r\\n    Because we don\\'t want liquid-versions to treat distinct values of\\r\\n    the same truthiness as distinct.\\r\\n  }}\\r\\n  \\r\\n  <LiquidVersions\\r\\n    @value={{if this.inverted (if @predicate false true) (if @predicate true false)}}\\r\\n    @matchContext={{hash helperName=this.helperName}}\\r\\n    @use={{@use}}\\r\\n    @rules={{@rules}}\\r\\n    @containerElement={{@containerElement}}\\r\\n    @renderWhenFalse={{has-block \\\"inverse\\\"}}\\r\\n    @class={{@class}} as |valueVersion|\\r\\n  >\\r\\n    {{#if valueVersion}}\\r\\n      {{yield}}\\r\\n    {{else}}\\r\\n      {{yield to=\\\"inverse\\\"}}\\r\\n    {{/if}}\\r\\n  </LiquidVersions>\\r\\n{{else}}\\r\\n  <LiquidContainer\\r\\n    id={{@containerId}}\\r\\n    class={{@class}}\\r\\n    @growDuration={{@growDuration}}\\r\\n    @growPixelsPerSecond={{@growPixelsPerSecond}}\\r\\n    @growEasing={{@growEasing}}\\r\\n    @shrinkDelay={{@shrinkDelay}}\\r\\n    @growDelay={{@growDelay}}\\r\\n    @enableGrowth={{@enableGrowth}} as |container|\\r\\n  >\\r\\n    <LiquidVersions\\r\\n      @value={{if this.inverted (if @predicate false true) (if @predicate true false)}}\\r\\n      @notify={{container}}\\r\\n      @matchContext={{hash helperName=this.helperName}}\\r\\n      @use={{@use}}\\r\\n      @rules={{@rules}}\\r\\n      @containerElement={{container.element}}\\r\\n      @renderWhenFalse={{has-block \\\"inverse\\\"}} as |valueVersion|\\r\\n    >\\r\\n      {{#if valueVersion}}\\r\\n        {{yield}}\\r\\n      {{else}}\\r\\n        {{yield to=\\\"inverse\\\"}}\\r\\n      {{/if}}\\r\\n    </LiquidVersions>\\r\\n  </LiquidContainer>\\r\\n{{/if}}\")","import Component from '@glimmer/component';\r\n\r\nexport default class LiquidIfComponent extends Component {\r\n  get helperName() {\r\n    return this.args.helperName || 'liquid-if';\r\n  }\r\n}\r\n"],"names":["precompileTemplate","LiquidIfComponent","Component","helperName","args","setComponentTemplate","TEMPLATE"],"mappings":";;;;AACA,eAAeA,kBAAkB,CAAC,6vDAA6vD,CAAC;;ACCjxD,MAAMC,iBAAiB,SAASC,SAAS,CAAC;EACvD,IAAIC,UAAUA,GAAG;AACf,IAAA,OAAO,IAAI,CAACC,IAAI,CAACD,UAAU,IAAI,WAAW,CAAA;AAC5C,GAAA;AACF,CAAA;AAACE,oBAAA,CAAAC,QAAA,EAJoBL,iBAAiB,CAAA;;;;"}